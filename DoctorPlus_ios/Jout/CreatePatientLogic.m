//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/liaomin/Documents/workspace/Android/DocPlusLogic/src/com/fq/halcyon/logic2/CreatePatientLogic.java
//
//  Created by liaomin on 15-5-4.
//

#line 1 "/Users/liaomin/Documents/workspace/Android/DocPlusLogic/src/com/fq/halcyon/logic2/CreatePatientLogic.java"

#include "ApiSystem.h"
#include "Constants.h"
#include "CreatePatientLogic.h"
#include "FQHttpParams.h"
#include "HttpRequestPotocol.h"
#include "JSONObject.h"
#include "JsonHelper.h"
#include "Patient.h"
#include "UriConstants.h"
#include "User.h"
#include "java/lang/Integer.h"
#include "java/lang/Throwable.h"
#include "java/util/HashMap.h"


#line 18
@implementation ComFqHalcyonLogic2CreatePatientLogic


#line 27
- (id)initWithComFqHalcyonLogic2CreatePatientLogic_CreateMedicalCallBack:(id<ComFqHalcyonLogic2CreatePatientLogic_CreateMedicalCallBack>)onCallBack {
  if (self = [super init]) {
    mHandle_ =
#line 68
    [[ComFqHalcyonLogic2CreatePatientLogic_CreateMedicalLogicHandle alloc] initWithComFqHalcyonLogic2CreatePatientLogic:self];
    
#line 28
    self->onCallBack_ = onCallBack;
  }
  return self;
}


#line 36
- (void)createMedicalWithNSString:(NSString *)patientName {
  
#line 37
  JavaUtilHashMap *map = [[JavaUtilHashMap alloc] init];
  (void) [map putWithId:@"user_id" withId:[JavaLangInteger valueOfWithInt:[((ComFqHalcyonEntityUser *) nil_chk([ComFqLibToolsConstants getUser])) getUserId]]];
  (void) [map putWithId:@"patient_name" withId:patientName];
  FQJSONObject *json = [ComFqLibJsonHelper createJsonWithJavaUtilMap:map];
  NSString *uri = [NSString stringWithFormat:@"%@/patient/create.do", ComFqLibToolsUriConstants_Conn_get_URL_PUB_()];
  
#line 43
  (void) [((ComFqHalcyonApiApiSystem *) nil_chk([ComFqHalcyonApiApiSystem getInstance])) requireWithNSString:uri withComFqHttpAsyncFQHttpParams:[[ComFqHttpAsyncFQHttpParams alloc] initWithFQJSONObject:json] withComFqHalcyonApiApiSystem_API_TYPEEnum:ComFqHalcyonApiApiSystem_API_TYPEEnum_get_DIRECT() withHalcyonHttpResponseHandle:mHandle_];
}

- (void)copyAllFieldsTo:(ComFqHalcyonLogic2CreatePatientLogic *)other {
  [super copyAllFieldsTo:other];
  other->mHandle_ = mHandle_;
  other->onCallBack_ = onCallBack_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "initWithComFqHalcyonLogic2CreatePatientLogic_CreateMedicalCallBack:", "CreatePatientLogic", NULL, 0x1, NULL },
    { "createMedicalWithNSString:", "createMedical", "V", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "onCallBack_", NULL, 0x2, "Lcom.fq.halcyon.logic2.CreatePatientLogic$CreateMedicalCallBack;", NULL,  },
    { "mHandle_", NULL, 0x2, "Lcom.fq.halcyon.logic2.CreatePatientLogic$CreateMedicalLogicHandle;", NULL,  },
  };
  static J2ObjcClassInfo _ComFqHalcyonLogic2CreatePatientLogic = { "CreatePatientLogic", "com.fq.halcyon.logic2", NULL, 0x1, 2, methods, 2, fields, 0, NULL};
  return &_ComFqHalcyonLogic2CreatePatientLogic;
}

@end

@interface ComFqHalcyonLogic2CreatePatientLogic_CreateMedicalCallBack : NSObject
@end

@implementation ComFqHalcyonLogic2CreatePatientLogic_CreateMedicalCallBack

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "createMedicalErrorWithInt:withNSString:", "createMedicalError", "V", 0x401, NULL },
    { "createMedicalSuccessWithInt:withComFqHalcyonEntityPatient:", "createMedicalSuccess", "V", 0x401, NULL },
  };
  static J2ObjcClassInfo _ComFqHalcyonLogic2CreatePatientLogic_CreateMedicalCallBack = { "CreateMedicalCallBack", "com.fq.halcyon.logic2", "CreatePatientLogic", 0x201, 2, methods, 0, NULL, 0, NULL};
  return &_ComFqHalcyonLogic2CreatePatientLogic_CreateMedicalCallBack;
}

@end


#line 46
@implementation ComFqHalcyonLogic2CreatePatientLogic_CreateMedicalLogicHandle


#line 49
- (void)onErrorWithInt:(int)code
 withJavaLangThrowable:(JavaLangThrowable *)e {
  
#line 50
  [((id<ComFqHalcyonLogic2CreatePatientLogic_CreateMedicalCallBack>) nil_chk(this$0_->onCallBack_)) createMedicalErrorWithInt:code withNSString:[((JavaLangThrowable *) nil_chk(e)) getMessage]];
}


#line 54
- (void)handleWithInt:(int)responseCode
         withNSString:(NSString *)msg
              withInt:(int)type
               withId:(id)results {
  if (responseCode == 0) {
    FQJSONObject *json = (FQJSONObject *) check_class_cast(results, [FQJSONObject class]);
    ComFqHalcyonEntityPatient *medical = [[ComFqHalcyonEntityPatient alloc] init];
    [medical setAtttributeByjsonWithFQJSONObject:json];
    [((id<ComFqHalcyonLogic2CreatePatientLogic_CreateMedicalCallBack>) nil_chk(this$0_->onCallBack_)) createMedicalSuccessWithInt:responseCode withComFqHalcyonEntityPatient:medical];
  }
  else {
    
#line 62
    [((id<ComFqHalcyonLogic2CreatePatientLogic_CreateMedicalCallBack>) nil_chk(this$0_->onCallBack_)) createMedicalErrorWithInt:responseCode withNSString:msg];
  }
}

- (id)initWithComFqHalcyonLogic2CreatePatientLogic:(ComFqHalcyonLogic2CreatePatientLogic *)outer$ {
  this$0_ = outer$;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "onErrorWithInt:withJavaLangThrowable:", "onError", "V", 0x1, NULL },
    { "handleWithInt:withNSString:withInt:withId:", "handle", "V", 0x1, NULL },
    { "initWithComFqHalcyonLogic2CreatePatientLogic:", "init", NULL, 0x0, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lcom.fq.halcyon.logic2.CreatePatientLogic;", NULL,  },
  };
  static J2ObjcClassInfo _ComFqHalcyonLogic2CreatePatientLogic_CreateMedicalLogicHandle = { "CreateMedicalLogicHandle", "com.fq.halcyon.logic2", "CreatePatientLogic", 0x0, 3, methods, 1, fields, 0, NULL};
  return &_ComFqHalcyonLogic2CreatePatientLogic_CreateMedicalLogicHandle;
}

@end
