//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/liaomin/Documents/workspace/Android/DocPlusLogic/src/com/fq/lib/tools/FQRemoteDebugTool.java
//
//  Created by liaomin on 15-5-4.
//

#line 1 "/Users/liaomin/Documents/workspace/Android/DocPlusLogic/src/com/fq/lib/tools/FQRemoteDebugTool.java"

#include "FQRemoteDebugTool.h"
#include "IOSObjectArray.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/StackTraceElement.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/Throwable.h"


#line 8
@implementation ComFqLibToolsFQRemoteDebugTool

id<ComFqLibToolsFQRemoteDebugTool_RemoteLogger> ComFqLibToolsFQRemoteDebugTool_mRemoteLogger_;


#line 18
+ (void)setRemoteLoggerWithComFqLibToolsFQRemoteDebugTool_RemoteLogger:(id<ComFqLibToolsFQRemoteDebugTool_RemoteLogger>)remoteLogger {
  
#line 19
  ComFqLibToolsFQRemoteDebugTool_mRemoteLogger_ = remoteLogger;
}


#line 22
+ (void)logWithNSString:(NSString *)message {
  
#line 23
  if (ComFqLibToolsFQRemoteDebugTool_mRemoteLogger_ == nil) {
    @throw [[JavaLangRuntimeException alloc] initWithNSString:@"Must call FQRemoteDebugTool#setRemoteLogger first!"];
  }
  [((id<ComFqLibToolsFQRemoteDebugTool_RemoteLogger>) nil_chk(ComFqLibToolsFQRemoteDebugTool_mRemoteLogger_)) logWithNSString:message];
}


#line 29
+ (void)logWithNSString:(NSString *)message
  withJavaLangThrowable:(JavaLangThrowable *)e {
  
#line 30
  if (ComFqLibToolsFQRemoteDebugTool_mRemoteLogger_ == nil) {
    @throw [[JavaLangRuntimeException alloc] initWithNSString:@"Must call FQRemoteDebugTool#setRemoteLogger first!"];
  }
  [((id<ComFqLibToolsFQRemoteDebugTool_RemoteLogger>) nil_chk(ComFqLibToolsFQRemoteDebugTool_mRemoteLogger_)) logWithNSString:[NSString stringWithFormat:@"%@,\n%@\n%@", message, [((JavaLangThrowable *) nil_chk(e)) description], [ComFqLibToolsFQRemoteDebugTool getStackTraceStringWithJavaLangStackTraceElementArray:[e getStackTrace]]]];
}


#line 36
+ (NSString *)getStackTraceStringWithJavaLangStackTraceElementArray:(IOSObjectArray *)es {
  
#line 37
  JavaLangStringBuilder *sb = [[JavaLangStringBuilder alloc] init];
  for (int i = 0; i < (int) [((IOSObjectArray *) nil_chk(es)) count]; i++) {
    (void) [((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:[((JavaLangStackTraceElement *) IOSObjectArray_Get(es, i)) description]])) appendWithNSString:@"\n"];
  }
  return [sb description];
}

- (id)init {
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "setRemoteLoggerWithComFqLibToolsFQRemoteDebugTool_RemoteLogger:", "setRemoteLogger", "V", 0x9, NULL },
    { "logWithNSString:", "log", "V", 0x9, NULL },
    { "logWithNSString:withJavaLangThrowable:", "log", "V", 0x9, NULL },
    { "getStackTraceStringWithJavaLangStackTraceElementArray:", "getStackTraceString", "Ljava.lang.String;", 0xa, NULL },
    { "init", NULL, NULL, 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "mRemoteLogger_", NULL, 0xa, "Lcom.fq.lib.tools.FQRemoteDebugTool$RemoteLogger;", &ComFqLibToolsFQRemoteDebugTool_mRemoteLogger_,  },
  };
  static J2ObjcClassInfo _ComFqLibToolsFQRemoteDebugTool = { "FQRemoteDebugTool", "com.fq.lib.tools", NULL, 0x1, 5, methods, 1, fields, 0, NULL};
  return &_ComFqLibToolsFQRemoteDebugTool;
}

@end

@interface ComFqLibToolsFQRemoteDebugTool_RemoteLogger : NSObject
@end

@implementation ComFqLibToolsFQRemoteDebugTool_RemoteLogger

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "logWithNSString:", "log", "V", 0x401, NULL },
  };
  static J2ObjcClassInfo _ComFqLibToolsFQRemoteDebugTool_RemoteLogger = { "RemoteLogger", "com.fq.lib.tools", "FQRemoteDebugTool", 0x209, 1, methods, 0, NULL, 0, NULL};
  return &_ComFqLibToolsFQRemoteDebugTool_RemoteLogger;
}

@end
