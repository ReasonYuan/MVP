//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/liaomin/Documents/workspace/Android/DocPlusLogic/src/com/fq/lib/JsonHelper.java
//
//  Created by liaomin on 15-5-4.
//

#line 1 "/Users/liaomin/Documents/workspace/Android/DocPlusLogic/src/com/fq/lib/JsonHelper.java"

#include "FQHttpResponseInterface.h"
#include "FQLog.h"
#include "FileHelper.h"
#include "JSONArray.h"
#include "JSONException.h"
#include "JSONObject.h"
#include "JsonHelper.h"
#include "java/lang/Exception.h"
#include "java/lang/Throwable.h"
#include "java/util/Iterator.h"
#include "java/util/Map.h"
#include "java/util/Set.h"


#line 13
@implementation ComFqLibJsonHelper

NSString * ComFqLibJsonHelper_TAG_ = @"JsonHelper";
NSString * ComFqLibJsonHelper_REQ_RECORD_ = 
#line 17
@"record";
NSString * ComFqLibJsonHelper_REC_CODE_ = 
#line 18
@"response_code";
NSString * ComFqLibJsonHelper_REC_MSG_ = 
#line 19
@"msg";
NSString * ComFqLibJsonHelper_REC_RESULT_ = 
#line 20
@"results";


#line 25
+ (FQJSONObject *)createJsonWithJavaUtilMap:(id<JavaUtilMap>)map {
  
#line 26
  FQJSONObject *json = [[FQJSONObject alloc] init];
  
#line 28
  @try {
    
#line 31
    if (map != nil) {
      id<JavaUtilSet> keySet = [map keySet];
      id<JavaUtilIterator> i = [((id<JavaUtilSet>) nil_chk(keySet)) iterator];
      
#line 35
      while ([((id<JavaUtilIterator>) nil_chk(i)) hasNext]) {
        NSString *key = [i next];
        (void) [json putWithNSString:key withId:[map getWithId:key]];
      }
    }
  }
  @catch (
#line 40
  FQJSONException *e) {
    [ComFqLibToolsFQLog printWithNSString:ComFqLibJsonHelper_TAG_ withNSString:@"createJson put attr error"];
  }
  return json;
}


#line 46
+ (FQJSONObject *)createJsonForDebugWithJavaUtilMap:(id<JavaUtilMap>)map {
  
#line 47
  FQJSONObject *json = [[FQJSONObject alloc] init];
  
#line 49
  @try {
    
#line 52
    if (map != nil) {
      id<JavaUtilSet> keySet = [map keySet];
      id<JavaUtilIterator> i = [((id<JavaUtilSet>) nil_chk(keySet)) iterator];
      
#line 56
      while ([((id<JavaUtilIterator>) nil_chk(i)) hasNext]) {
        NSString *key = [i next];
        (void) [json putWithNSString:key withId:[map getWithId:key]];
      }
    }
  }
  @catch (
#line 61
  FQJSONException *e) {
    [ComFqLibToolsFQLog printWithNSString:ComFqLibJsonHelper_TAG_ withNSString:@"createJson put attr error"];
  }
  return json;
}


#line 69
+ (FQJSONArray *)parseJsonArrayWithNSString:(NSString *)jsonString {
  
#line 70
  FQJSONArray *mJsonArray = nil;
  @try {
    FQJSONObject *mObject = [[FQJSONObject alloc] initWithNSString:jsonString];
    int mResponseCode = [mObject getIntWithNSString:ComFqLibJsonHelper_REC_CODE_];
    {
      
#line 79
      NSString *msg;
      
#line 74
      switch (mResponseCode) {
        case ComFqLibJsonHelper_REC_CODE_SUCC:
        mJsonArray = [mObject getJSONArrayWithNSString:ComFqLibJsonHelper_REC_RESULT_];
        break;
        default:
        msg = [mObject getStringWithNSString:ComFqLibJsonHelper_REC_MSG_];
        [ComFqLibToolsFQLog printWithNSString:ComFqLibJsonHelper_TAG_ withNSString:[NSString stringWithFormat:@"resquest JsonObject error!%@", msg]];
        break;
      }
    }
  }
  @catch (
#line 84
  FQJSONException *e) {
    [ComFqLibToolsFQLog printWithNSString:ComFqLibJsonHelper_TAG_ withNSString:@"parseJsonArray error!"];
    [((FQJSONException *) nil_chk(e)) printStackTrace];
  }
  return mJsonArray;
}


#line 91
+ (FQJSONObject *)parseJsonObjectWithNSString:(NSString *)jsonObject {
  
#line 92
  FQJSONObject *mJsonObject = nil;
  
#line 94
  @try {
    FQJSONObject *mObject = [[FQJSONObject alloc] initWithNSString:jsonObject];
    int mResponseCode = [mObject getIntWithNSString:ComFqLibJsonHelper_REC_CODE_];
    {
      
#line 102
      NSString *msg;
      
#line 97
      switch (mResponseCode) {
        case ComFqLibJsonHelper_REC_CODE_SUCC:
        mJsonObject = [mObject getJSONObjectWithNSString:ComFqLibJsonHelper_REC_RESULT_];
        break;
        default:
        msg = [mObject getStringWithNSString:ComFqLibJsonHelper_REC_MSG_];
        [ComFqLibToolsFQLog printWithNSString:ComFqLibJsonHelper_TAG_ withNSString:[NSString stringWithFormat:@"resquest JsonObject error!%@", msg]];
        break;
      }
    }
  }
  @catch (
#line 106
  FQJSONException *e) {
    [ComFqLibToolsFQLog printWithNSString:ComFqLibJsonHelper_TAG_ withNSString:@"parseJsonObject error!"];
    [((FQJSONException *) nil_chk(e)) printStackTrace];
  }
  return mJsonObject;
}


#line 113
+ (FQJSONArray *)parseJsonArrayWithFQJSONObject:(FQJSONObject *)json
    withComFqHttpPotocolFQHttpResponseInterface:(id<ComFqHttpPotocolFQHttpResponseInterface>)inf {
  
#line 114
  if (json == nil) {
    [((id<ComFqHttpPotocolFQHttpResponseInterface>) nil_chk(inf)) onErrorWithInt:-21 withJavaLangThrowable:[[JavaLangThrowable alloc] initWithNSString:@"(JsonHelper)get network data json is null"]];
    return nil;
  }
  int mResponseCode = [((FQJSONObject *) nil_chk(json)) optIntWithNSString:ComFqLibJsonHelper_REC_CODE_ withInt:-1];
  
#line 120
  if (mResponseCode == ComFqLibJsonHelper_REC_CODE_SUCC) {
    @try {
      FQJSONArray *jsonArray = [json getJSONArrayWithNSString:ComFqLibJsonHelper_REC_RESULT_];
      return jsonArray;
    }
    @catch (
#line 124
    JavaLangException *e) {
      [((id<ComFqHttpPotocolFQHttpResponseInterface>) nil_chk(inf)) onErrorWithInt:-22 withJavaLangThrowable:[[JavaLangThrowable alloc] initWithNSString:[NSString stringWithFormat:@"(JsonHelper)%@", [((JavaLangException *) nil_chk(e)) getMessage]]]];
    }
  }
  else {
    
#line 128
    [((id<ComFqHttpPotocolFQHttpResponseInterface>) nil_chk(inf)) onErrorWithInt:mResponseCode withJavaLangThrowable:[[JavaLangThrowable alloc] initWithNSString:[json optStringWithNSString:ComFqLibJsonHelper_REC_MSG_]]];
  }
  return nil;
}


#line 133
+ (FQJSONObject *)parseJsonObjectWithFQJSONObject:(FQJSONObject *)json
      withComFqHttpPotocolFQHttpResponseInterface:(id<ComFqHttpPotocolFQHttpResponseInterface>)inf {
  
#line 134
  if (json == nil) {
    [((id<ComFqHttpPotocolFQHttpResponseInterface>) nil_chk(inf)) onErrorWithInt:-21 withJavaLangThrowable:[[JavaLangThrowable alloc] initWithNSString:@"(JsonHelper)get network data json is null"]];
    return nil;
  }
  
#line 139
  int mResponseCode = [((FQJSONObject *) nil_chk(json)) optIntWithNSString:ComFqLibJsonHelper_REC_CODE_ withInt:-1];
  
#line 141
  if (mResponseCode == ComFqLibJsonHelper_REC_CODE_SUCC) {
    @try {
      FQJSONObject *jsonObject = [json getJSONObjectWithNSString:ComFqLibJsonHelper_REC_RESULT_];
      return jsonObject;
    }
    @catch (
#line 145
    JavaLangException *e) {
      [((id<ComFqHttpPotocolFQHttpResponseInterface>) nil_chk(inf)) onErrorWithInt:-22 withJavaLangThrowable:[[JavaLangThrowable alloc] initWithNSString:[NSString stringWithFormat:@"(JsonHelper)%@", [((JavaLangException *) nil_chk(e)) getMessage]]]];
    }
  }
  else {
    
#line 149
    [((id<ComFqHttpPotocolFQHttpResponseInterface>) nil_chk(inf)) onErrorWithInt:mResponseCode withJavaLangThrowable:[[JavaLangThrowable alloc] initWithNSString:[json optStringWithNSString:ComFqLibJsonHelper_REC_MSG_]]];
  }
  return nil;
}


#line 154
+ (FQJSONObject *)loadJsonObjectByFileWithNSString:(NSString *)path
                                      withNSString:(NSString *)name {
  
#line 155
  NSString *jsonStr = [ComFqLibFileHelper readStringWithNSString:path withNSString:name withBoolean:NO];
  if ([@"" isEqual:jsonStr]) return nil;
  return [ComFqLibJsonHelper parseJsonObjectWithNSString:jsonStr];
}

- (id)init {
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "createJsonWithJavaUtilMap:", "createJson", "Lcom.fq.lib.json.JSONObject;", 0x9, NULL },
    { "createJsonForDebugWithJavaUtilMap:", "createJsonForDebug", "Lcom.fq.lib.json.JSONObject;", 0x9, NULL },
    { "parseJsonArrayWithNSString:", "parseJsonArray", "Lcom.fq.lib.json.JSONArray;", 0x9, NULL },
    { "parseJsonObjectWithNSString:", "parseJsonObject", "Lcom.fq.lib.json.JSONObject;", 0x9, NULL },
    { "parseJsonArrayWithFQJSONObject:withComFqHttpPotocolFQHttpResponseInterface:", "parseJsonArray", "Lcom.fq.lib.json.JSONArray;", 0x9, NULL },
    { "parseJsonObjectWithFQJSONObject:withComFqHttpPotocolFQHttpResponseInterface:", "parseJsonObject", "Lcom.fq.lib.json.JSONObject;", 0x9, NULL },
    { "loadJsonObjectByFileWithNSString:withNSString:", "loadJsonObjectByFile", "Lcom.fq.lib.json.JSONObject;", 0x9, NULL },
    { "init", NULL, NULL, 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "TAG_", NULL, 0xc, "Ljava.lang.String;", &ComFqLibJsonHelper_TAG_,  },
    { "REQ_RECORD_", NULL, 0x19, "Ljava.lang.String;", &ComFqLibJsonHelper_REQ_RECORD_,  },
    { "REC_CODE_", NULL, 0x19, "Ljava.lang.String;", &ComFqLibJsonHelper_REC_CODE_,  },
    { "REC_MSG_", NULL, 0x19, "Ljava.lang.String;", &ComFqLibJsonHelper_REC_MSG_,  },
    { "REC_RESULT_", NULL, 0x19, "Ljava.lang.String;", &ComFqLibJsonHelper_REC_RESULT_,  },
    { "REC_CODE_SUCC_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComFqLibJsonHelper_REC_CODE_SUCC },
  };
  static J2ObjcClassInfo _ComFqLibJsonHelper = { "JsonHelper", "com.fq.lib", NULL, 0x1, 8, methods, 6, fields, 0, NULL};
  return &_ComFqLibJsonHelper;
}

@end
