//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/liaomin/Documents/workspace/Android/DocPlusLogic/src/com/fq/halcyon/logic2/UploadRecordLogic.java
//
//  Created by liaomin on 15-5-4.
//

#line 1 "/Users/liaomin/Documents/workspace/Android/DocPlusLogic/src/com/fq/halcyon/logic2/UploadRecordLogic.java"

#include "Constants.h"
#include "FQHttpParams.h"
#include "HalcyonUploadLooper.h"
#include "JSONObject.h"
#include "LoopCell.h"
#include "LoopUpLoadCell.h"
#include "OneCopy.h"
#include "OneType.h"
#include "Photo.h"
#include "PhotoRecord.h"
#include "UploadRecordLogic.h"
#include "UriConstants.h"
#include "User.h"
#include "java/lang/Exception.h"
#include "java/util/ArrayList.h"


#line 19
@implementation ComFqHalcyonLogic2UploadRecordLogic

- (id)init {
  return [super init];
}


#line 24
- (void)upLoadWithNSString:(NSString *)patientaName
                   withInt:(int)recordId
     withJavaUtilArrayList:(JavaUtilArrayList *)types {
  FQJSONObject *json = [[FQJSONObject alloc] init];
  @try {
    (void) [json putWithNSString:@"user_id" withInt:[((ComFqHalcyonEntityUser *) nil_chk([ComFqLibToolsConstants getUser])) getUserId]];
    (void) [json putWithNSString:@"record_id" withInt:recordId];
  }
  @catch (
#line 29
  JavaLangException *e) {
  }
  
#line 32
  NSString *uploadUrl = [NSString stringWithFormat:@"%@/record/item/create.do", ComFqLibToolsUriConstants_Conn_get_URL_PUB_()];
  ComFqHttpAsyncFQHttpParams *params = [[ComFqHttpAsyncFQHttpParams alloc] initWithFQJSONObject:json];
  
#line 35
  for (int i = 0; i < [((JavaUtilArrayList *) nil_chk(types)) size]; i++) {
    ComFqHttpAsyncUploadloopLoopCell *cell = [[ComFqHttpAsyncUploadloopLoopUpLoadCell alloc] initWithNSString:uploadUrl withComFqHttpAsyncFQHttpParams:params withComFqHttpAsyncUploadloopLoopUpLoadCell_UP_TYPEEnum:ComFqHttpAsyncUploadloopLoopUpLoadCell_UP_TYPEEnum_get_UP_TYPE_RECORD()];
    ((ComFqHttpAsyncUploadloopLoopUpLoadCell *) check_class_cast(cell, [ComFqHttpAsyncUploadloopLoopUpLoadCell class]))->uuid_ = ((ComFqHalcyonUimodelsOneType *) nil_chk([types getWithInt:i]))->uuid_;
    [((ComFqHttpAsyncUploadloopLoopUpLoadCell *) check_class_cast(cell, [ComFqHttpAsyncUploadloopLoopUpLoadCell class])) setRecordIdWithInt:recordId];
    cell->name_ = patientaName;
    int fileSize = 0;
    ComFqHalcyonUimodelsOneType *oneType = [types getWithInt:i];
    JavaUtilArrayList *oneCopies = [((ComFqHalcyonUimodelsOneType *) nil_chk(oneType)) getAllCopies];
    for (int j = 0; j < [((JavaUtilArrayList *) nil_chk(oneCopies)) size]; j++) {
      JavaUtilArrayList *photos1 = [[JavaUtilArrayList alloc] init];
      ComFqHalcyonUimodelsOneCopy *oneCopy = [oneCopies getWithInt:j];
      JavaUtilArrayList *photos = [((ComFqHalcyonUimodelsOneCopy *) nil_chk(oneCopy)) getPhotos];
      if ([((JavaUtilArrayList *) nil_chk(photos)) size] == 0) continue;
      for (int k = 0; k < [photos size]; k++) {
        NSString *filePath = [((ComFqHalcyonEntityPhotoRecord *) nil_chk([photos getWithInt:k])) getLocalPath];
        ComFqHalcyonEntityPhoto *photo = [[ComFqHalcyonEntityPhoto alloc] init];
        [photo setLocalPathWithNSString:filePath];
        [photos1 addWithId:photo];
      }
      fileSize += [photos1 size];
      [cell addPhotosWithInt:[oneType getType] withJavaUtilArrayList:photos1];
    }
    [cell setTypeWithComFqHttpAsyncUploadloopLoopCell_CELL_TYPEEnum:ComFqHttpAsyncUploadloopLoopCell_CELL_TYPEEnum_get_CELL_UPLOAD()];
    if (fileSize != 0) {
      [((ComFqHalcyonHalcyonUploadLooper *) nil_chk([ComFqHalcyonHalcyonUploadLooper getInstance])) pushWithComFqHttpAsyncUploadloopLoopCell:cell];
    }
  }
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "init", "UploadRecordLogic", NULL, 0x1, NULL },
    { "upLoadWithNSString:withInt:withJavaUtilArrayList:", "upLoad", "V", 0x1, NULL },
  };
  static J2ObjcClassInfo _ComFqHalcyonLogic2UploadRecordLogic = { "UploadRecordLogic", "com.fq.halcyon.logic2", NULL, 0x1, 2, methods, 0, NULL, 0, NULL};
  return &_ComFqHalcyonLogic2UploadRecordLogic;
}

@end
