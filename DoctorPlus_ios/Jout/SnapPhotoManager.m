//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/liaomin/Documents/workspace/Android/DocPlusLogic/src/com/fq/lib/record/SnapPhotoManager.java
//
//  Created by liaomin on 15-5-4.
//

#line 1 "/Users/liaomin/Documents/workspace/Android/DocPlusLogic/src/com/fq/lib/record/SnapPhotoManager.java"

#include "IOSPrimitiveArray.h"
#include "OneCopy.h"
#include "OneType.h"
#include "PhotoRecord.h"
#include "RecordCache.h"
#include "RecordConstants.h"
#include "SnapPhotoManager.h"
#include "java/lang/Exception.h"
#include "java/util/ArrayList.h"


#line 13
@implementation ComFqLibRecordSnapPhotoManager

ComFqLibRecordSnapPhotoManager * ComFqLibRecordSnapPhotoManager_mInstance_;


#line 29
- (id)init {
  return [super init];
}


#line 39
- (id)getTakePhoto {
  
#line 40
  return mTakePhoto_;
}


#line 43
- (void)setTakePhotoWithId:(id)obj {
  
#line 44
  mTakePhoto_ = obj;
}


#line 55
+ (ComFqLibRecordSnapPhotoManager *)instanceWithInt:(int)recordId
                                            withInt:(int)docType
                                            withInt:(int)currType
                                        withBoolean:(BOOL)isRu
                                        withBoolean:(BOOL)isChu {
  
#line 56
  if (ComFqLibRecordSnapPhotoManager_mInstance_ == nil) {
    ComFqLibRecordSnapPhotoManager_mInstance_ = [[ComFqLibRecordSnapPhotoManager alloc] init];
    ComFqLibRecordSnapPhotoManager_mInstance_->mRecordId_ = recordId;
    ComFqLibRecordSnapPhotoManager_mInstance_->mIsAllowRu_ = isRu;
    ComFqLibRecordSnapPhotoManager_mInstance_->mIsAllowChu_ = isChu;
    ComFqLibRecordSnapPhotoManager_mInstance_->TYPES_ = [ComFqLibRecordRecordConstants getTypesByRecordTypeWithInt:docType];
    for (int i = 0; i < (int) [((IOSIntArray *) nil_chk(ComFqLibRecordSnapPhotoManager_mInstance_->TYPES_)) count]; i++) {
      int type = IOSIntArray_Get(ComFqLibRecordSnapPhotoManager_mInstance_->TYPES_, i);
      if (type == currType) ComFqLibRecordSnapPhotoManager_mInstance_->mUIIndex_ = i;
    }
    ComFqLibRecordSnapPhotoManager_mInstance_->mTypes_ = [((ComFqLibRecordRecordCache *) nil_chk([ComFqLibRecordRecordCache getInstance])) getUnUploadTypes];
    if (ComFqLibRecordSnapPhotoManager_mInstance_->mTypes_ == nil) {
      ComFqLibRecordSnapPhotoManager_mInstance_->mTypes_ = [[JavaUtilArrayList alloc] init];
    }
    else {
      
#line 70
      int count = [ComFqLibRecordSnapPhotoManager_mInstance_->mTypes_ size];
      ComFqLibRecordSnapPhotoManager_mInstance_->mCurrentIndex_ = count - 1;
      ComFqLibRecordSnapPhotoManager_mInstance_->mCurrentCopy_ = [((ComFqHalcyonUimodelsOneType *) nil_chk([ComFqLibRecordSnapPhotoManager_mInstance_->mTypes_ getWithInt:count - 1])) getCopyByIdWithInt:0];
    }
  }
  return ComFqLibRecordSnapPhotoManager_mInstance_;
}


#line 78
+ (ComFqLibRecordSnapPhotoManager *)getInstance {
  
#line 79
  return ComFqLibRecordSnapPhotoManager_mInstance_;
}


#line 82
- (int)getRecordId {
  
#line 83
  return mRecordId_;
}


#line 90
- (JavaUtilArrayList *)getTypes {
  
#line 91
  return mTypes_;
}


#line 99
- (JavaUtilArrayList *)getRealyTypes {
  
#line 100
  for (int i = 0; i < [((JavaUtilArrayList *) nil_chk(mTypes_)) size]; i++) {
    ComFqHalcyonUimodelsOneCopy *copy_ = [((ComFqHalcyonUimodelsOneType *) nil_chk([mTypes_ getWithInt:i])) getCopyByIdWithInt:0];
    JavaUtilArrayList *photos = [((ComFqHalcyonUimodelsOneCopy *) nil_chk(copy_)) getPhotos];
    for (int j = 0; j < [((JavaUtilArrayList *) nil_chk(photos)) size]; j++) {
      NSString *path = [((ComFqHalcyonEntityPhotoRecord *) nil_chk([photos getWithInt:j])) getLocalPath];
      if (path == nil) {
        (void) [photos removeWithInt:j];
        j--;
        if ([photos size] == 0) {
          (void) [mTypes_ removeWithInt:i];
          i--;
          break;
        }
      }
    }
  }
  return mTypes_;
}


#line 123
- (void)clear {
  
#line 125
  ComFqLibRecordSnapPhotoManager_mInstance_ = nil;
  mCurrentCopy_ = nil;
}


#line 136
- (int)getPhotoCount {
  
#line 137
  int cnt = 0;
  for (int i = 0; i < [((JavaUtilArrayList *) nil_chk(mTypes_)) size]; i++) {
    cnt += [((JavaUtilArrayList *) nil_chk([((ComFqHalcyonUimodelsOneCopy *) nil_chk([((ComFqHalcyonUimodelsOneType *) nil_chk([mTypes_ getWithInt:i])) getCopyByIdWithInt:0])) getPhotos])) size];
  }
  return cnt;
}


#line 149
- (BOOL)isHaveTypeWithInt:(int)recordType {
  
#line 150
  for (int i = 0; i < [((JavaUtilArrayList *) nil_chk(mTypes_)) size]; i++) {
    int type = [((ComFqHalcyonUimodelsOneType *) nil_chk([mTypes_ getWithInt:i])) getType];
    if (type == recordType) {
      return YES;
    }
  }
  return NO;
}


#line 163
- (int)getTypeCount {
  
#line 164
  return [((JavaUtilArrayList *) nil_chk(mTypes_)) size];
}


#line 172
- (ComFqHalcyonUimodelsOneType *)getTypeByIndexWithInt:(int)index {
  
#line 173
  @try {
    return [((JavaUtilArrayList *) nil_chk(mTypes_)) getWithInt:index];
  }
  @catch (
#line 175
  JavaLangException *e) {
    return nil;
  }
}


#line 184
- (ComFqHalcyonUimodelsOneType *)getLastType {
  @try {
    return [mTypes_ getWithInt:[((JavaUtilArrayList *) nil_chk(mTypes_)) size] - 1];
  }
  @catch (
#line 187
  JavaLangException *e) {
    return nil;
  }
}


#line 196
- (ComFqHalcyonEntityPhotoRecord *)getLastPhoto {
  
#line 197
  ComFqHalcyonUimodelsOneType *type = [self getLastType];
  if (type == nil) return nil;
  @try {
    JavaUtilArrayList *photos = [((ComFqHalcyonUimodelsOneCopy *) nil_chk([((ComFqHalcyonUimodelsOneType *) nil_chk(type)) getCopyByIdWithInt:0])) getPhotos];
    return [photos getWithInt:[((JavaUtilArrayList *) nil_chk(photos)) size] - 1];
  }
  @catch (
#line 202
  JavaLangException *e) {
    return nil;
  }
}

- (void)addTypeWithInt:(int)index
withComFqHalcyonUimodelsOneType:(ComFqHalcyonUimodelsOneType *)type {
  
#line 213
  [((JavaUtilArrayList *) nil_chk(mTypes_)) addWithInt:index withId:type];
}


#line 220
- (ComFqHalcyonUimodelsOneType *)getCurrentType {
  
#line 221
  @try {
    return [((JavaUtilArrayList *) nil_chk(mTypes_)) getWithInt:mCurrentIndex_];
  }
  @catch (
#line 223
  JavaLangException *e) {
    return nil;
  }
}


#line 236
- (int)getCurrentIndex {
  
#line 237
  return mCurrentIndex_;
}


#line 244
- (ComFqHalcyonUimodelsOneCopy *)getCurrentCopy {
  
#line 245
  return mCurrentCopy_;
}


#line 252
- (NSString *)getCurrenTypeName {
  
#line 253
  return [ComFqLibRecordRecordConstants getTypeNameByRecordTypeWithInt:[((ComFqHalcyonUimodelsOneType *) nil_chk([((JavaUtilArrayList *) nil_chk(mTypes_)) getWithInt:mCurrentIndex_])) getType]];
}


#line 260
- (int)getCurrentTypePhotoCount {
  
#line 261
  @try {
    ComFqHalcyonUimodelsOneCopy *copy_ = [((ComFqHalcyonUimodelsOneType *) nil_chk([((JavaUtilArrayList *) nil_chk(mTypes_)) getWithInt:mCurrentIndex_])) getCopyByIdWithInt:0];
    return [((JavaUtilArrayList *) nil_chk([((ComFqHalcyonUimodelsOneCopy *) nil_chk(copy_)) getPhotos])) size];
  }
  @catch (
#line 264
  JavaLangException *e) {
    return 0;
  }
}


#line 273
- (void)addCurrentIndexWithInt:(int)plus {
  mCurrentIndex_ += plus;
}


#line 282
- (BOOL)isAllowCatch {
  
#line 283
  if (mCurrentCopy_ != nil &&
#line 284
  [mCurrentCopy_ getType] == ComFqLibRecordRecordConstants_TYPE_EXAMINATION) {
    if ([((JavaUtilArrayList *) nil_chk([mCurrentCopy_ getPhotos])) size] > 0) {
      return NO;
    }
  }
  return YES;
}


#line 297
- (BOOL)isSignlePhoto {
  
#line 298
  return IOSIntArray_Get(nil_chk(TYPES_), mUIIndex_) == ComFqLibRecordRecordConstants_TYPE_EXAMINATION;
}


#line 305
- (void)selectIndexWithInt:(int)index {
  
#line 306
  if (index == -1) return;
  mCurrentIndex_ = index;
  ComFqHalcyonUimodelsOneType *type = [self getTypeByIndexWithInt:index];
  if (type == nil) return;
  @try {
    mCurrentCopy_ = [((ComFqHalcyonUimodelsOneType *) nil_chk(type)) getCopyByIdWithInt:0];
  }
  @catch (JavaLangException *e) {
    mCurrentCopy_ = nil;
  }
}


#line 321
- (void)lastRecordItem {
  
#line 322
  mCurrentIndex_--;
  mCurrentCopy_ = nil;
}


#line 330
- (void)nextRecordItem {
  
#line 331
  mCurrentIndex_++;
  mCurrentCopy_ = nil;
}


#line 347
- (BOOL)canNextRecordItem {
  
#line 348
  ComFqHalcyonUimodelsOneType *type = [self getLastType];
  if (type == nil) return NO;
  return ([((JavaUtilArrayList *) nil_chk([((ComFqHalcyonUimodelsOneCopy *) nil_chk([((ComFqHalcyonUimodelsOneType *) nil_chk(type)) getCopyByIdWithInt:0])) getPhotos])) size] > 0);
}


#line 358
- (BOOL)isChangeType {
  
#line 359
  int willtype = IOSIntArray_Get(nil_chk(TYPES_), mUIIndex_);
  
#line 361
  if (willtype == ComFqLibRecordRecordConstants_TYPE_ADMISSION) {
    if (mIsAllowRu_ || [self isHaveTypeWithInt:willtype]) {
      mUIIndex_++;
      if (mUIIndex_ >= (int) [TYPES_ count]) mUIIndex_ = 0;
      return YES;
    }
  }
  else
#line 367
  if (willtype == ComFqLibRecordRecordConstants_TYPE_DISCHARGE) {
    if (mIsAllowChu_ || [self isHaveTypeWithInt:willtype]) {
      mUIIndex_++;
      if (mUIIndex_ >= (int) [TYPES_ count]) mUIIndex_ = 0;
      return YES;
    }
  }
  
#line 381
  return NO;
}


#line 387
- (void)lastRecordType {
  
#line 388
  mUIIndex_--;
  if (mUIIndex_ < 0) mUIIndex_ = (int) [((IOSIntArray *) nil_chk(TYPES_)) count] - 1;
  int willtype = IOSIntArray_Get(nil_chk(TYPES_), mUIIndex_);
  
#line 393
  if (willtype == ComFqLibRecordRecordConstants_TYPE_ADMISSION) {
    if (mIsAllowRu_ || [self isHaveTypeWithInt:willtype]) {
      mUIIndex_--;
      if (mUIIndex_ < 0) mUIIndex_ = (int) [TYPES_ count] - 1;
    }
  }
  else
#line 398
  if (willtype == ComFqLibRecordRecordConstants_TYPE_DISCHARGE) {
    if (mIsAllowChu_ || [self isHaveTypeWithInt:willtype]) {
      mUIIndex_--;
      if (mUIIndex_ < 0) mUIIndex_ = (int) [TYPES_ count] - 1;
    }
  }
}


#line 415
- (void)nextRecordType {
  
#line 416
  mUIIndex_++;
  if (mUIIndex_ >= (int) [((IOSIntArray *) nil_chk(TYPES_)) count]) mUIIndex_ = 0;
  int willtype = IOSIntArray_Get(TYPES_, mUIIndex_);
  
#line 421
  if (willtype == ComFqLibRecordRecordConstants_TYPE_ADMISSION) {
    if (mIsAllowRu_ || [self isHaveTypeWithInt:willtype]) {
      mUIIndex_++;
      if (mUIIndex_ >= (int) [TYPES_ count]) mUIIndex_ = 0;
    }
  }
  else
#line 426
  if (willtype == ComFqLibRecordRecordConstants_TYPE_DISCHARGE) {
    if (mIsAllowChu_ || [self isHaveTypeWithInt:willtype]) {
      mUIIndex_++;
      if (mUIIndex_ >= (int) [TYPES_ count]) mUIIndex_ = 0;
    }
  }
}


#line 444
- (NSString *)getSelectTypeName {
  
#line 445
  return [ComFqLibRecordRecordConstants getTypeNameByRecordTypeWithInt:IOSIntArray_Get(nil_chk(TYPES_), mUIIndex_)];
}


#line 453
- (void)initCurrentType {
  
#line 454
  if (mCurrentCopy_ != nil) return;
  
#line 456
  ComFqHalcyonUimodelsOneType *type = [self getCurrentType];
  if (type == nil) {
    type = [[ComFqHalcyonUimodelsOneType alloc] initWithInt:IOSIntArray_Get(nil_chk(TYPES_), mUIIndex_)];
    [self addTypeWithInt:mCurrentIndex_ withComFqHalcyonUimodelsOneType:type];
    mCurrentCopy_ = [[ComFqHalcyonUimodelsOneCopy alloc] initWithInt:IOSIntArray_Get(TYPES_, mUIIndex_)];
    [type AddOneCopyWithComFqHalcyonUimodelsOneCopy:mCurrentCopy_];
  }
  else {
    
#line 463
    mCurrentCopy_ = [type getCopyByIdWithInt:0];
  }
}


#line 467
- (void)currentCopyAddPhotoWithNSString:(NSString *)path {
  
#line 468
  ComFqHalcyonEntityPhotoRecord *photo = [[ComFqHalcyonEntityPhotoRecord alloc] initWithNSString:path];
  [photo setRecordTypeWithInt:[((ComFqHalcyonUimodelsOneCopy *) nil_chk(mCurrentCopy_)) getType]];
  [((JavaUtilArrayList *) nil_chk(mCurrentCopy_->photos_)) addWithId:photo];
}


#line 473
- (void)reSetData {
  
#line 474
  mCurrentCopy_ = nil;
  mCurrentIndex_ = [((JavaUtilArrayList *) nil_chk(mTypes_)) size];
  if (mCurrentIndex_ > 0) {
    mCurrentIndex_--;
    mCurrentCopy_ = [((ComFqHalcyonUimodelsOneType *) nil_chk([self getLastType])) getCopyByIdWithInt:0];
  }
  else {
    
#line 480
    mCurrentCopy_ = nil;
  }
}


#line 488
- (void)setToTypeInFirstWithInt:(int)type {
  for (int i = 0; i < [((JavaUtilArrayList *) nil_chk(mTypes_)) size]; i++) {
    if ([((ComFqHalcyonUimodelsOneType *) nil_chk([mTypes_ getWithInt:i])) getType] == type) {
      mCurrentIndex_ = i;
      mCurrentCopy_ = [((ComFqHalcyonUimodelsOneType *) nil_chk([mTypes_ getWithInt:i])) getCopyByIdWithInt:0];
    }
  }
}

- (void)copyAllFieldsTo:(ComFqLibRecordSnapPhotoManager *)other {
  [super copyAllFieldsTo:other];
  other->TYPES_ = TYPES_;
  other->mCurrentCopy_ = mCurrentCopy_;
  other->mCurrentIndex_ = mCurrentIndex_;
  other->mIsAllowChu_ = mIsAllowChu_;
  other->mIsAllowRu_ = mIsAllowRu_;
  other->mRecordId_ = mRecordId_;
  other->mTakePhoto_ = mTakePhoto_;
  other->mTypes_ = mTypes_;
  other->mUIIndex_ = mUIIndex_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "init", "SnapPhotoManager", NULL, 0x2, NULL },
    { "getTakePhoto", NULL, "Ljava.lang.Object;", 0x1, NULL },
    { "setTakePhotoWithId:", "setTakePhoto", "V", 0x1, NULL },
    { "instanceWithInt:withInt:withInt:withBoolean:withBoolean:", "instance", "Lcom.fq.lib.record.SnapPhotoManager;", 0x9, NULL },
    { "getInstance", NULL, "Lcom.fq.lib.record.SnapPhotoManager;", 0x9, NULL },
    { "getRecordId", NULL, "I", 0x1, NULL },
    { "getTypes", NULL, "Ljava.util.ArrayList;", 0x1, NULL },
    { "getRealyTypes", NULL, "Ljava.util.ArrayList;", 0x1, NULL },
    { "clear", NULL, "V", 0x1, NULL },
    { "getPhotoCount", NULL, "I", 0x1, NULL },
    { "isHaveTypeWithInt:", "isHaveType", "Z", 0x1, NULL },
    { "getTypeCount", NULL, "I", 0x1, NULL },
    { "getTypeByIndexWithInt:", "getTypeByIndex", "Lcom.fq.halcyon.uimodels.OneType;", 0x1, NULL },
    { "getLastType", NULL, "Lcom.fq.halcyon.uimodels.OneType;", 0x1, NULL },
    { "getLastPhoto", NULL, "Lcom.fq.halcyon.entity.PhotoRecord;", 0x1, NULL },
    { "addTypeWithInt:withComFqHalcyonUimodelsOneType:", "addType", "V", 0x1, NULL },
    { "getCurrentType", NULL, "Lcom.fq.halcyon.uimodels.OneType;", 0x1, NULL },
    { "getCurrentIndex", NULL, "I", 0x1, NULL },
    { "getCurrentCopy", NULL, "Lcom.fq.halcyon.uimodels.OneCopy;", 0x1, NULL },
    { "getCurrenTypeName", NULL, "Ljava.lang.String;", 0x1, NULL },
    { "getCurrentTypePhotoCount", NULL, "I", 0x1, NULL },
    { "addCurrentIndexWithInt:", "addCurrentIndex", "V", 0x1, NULL },
    { "isAllowCatch", NULL, "Z", 0x1, NULL },
    { "isSignlePhoto", NULL, "Z", 0x1, NULL },
    { "selectIndexWithInt:", "selectIndex", "V", 0x1, NULL },
    { "lastRecordItem", NULL, "V", 0x1, NULL },
    { "nextRecordItem", NULL, "V", 0x1, NULL },
    { "canNextRecordItem", NULL, "Z", 0x1, NULL },
    { "isChangeType", NULL, "Z", 0x1, NULL },
    { "lastRecordType", NULL, "V", 0x1, NULL },
    { "nextRecordType", NULL, "V", 0x1, NULL },
    { "getSelectTypeName", NULL, "Ljava.lang.String;", 0x1, NULL },
    { "initCurrentType", NULL, "V", 0x1, NULL },
    { "currentCopyAddPhotoWithNSString:", "currentCopyAddPhoto", "V", 0x1, NULL },
    { "reSetData", NULL, "V", 0x1, NULL },
    { "setToTypeInFirstWithInt:", "setToTypeInFirst", "V", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "mInstance_", NULL, 0xa, "Lcom.fq.lib.record.SnapPhotoManager;", &ComFqLibRecordSnapPhotoManager_mInstance_,  },
    { "mTypes_", NULL, 0x2, "Ljava.util.ArrayList;", NULL,  },
    { "TYPES_", NULL, 0x2, "[I", NULL,  },
    { "mCurrentCopy_", NULL, 0x2, "Lcom.fq.halcyon.uimodels.OneCopy;", NULL,  },
    { "mCurrentIndex_", NULL, 0x2, "I", NULL,  },
    { "mUIIndex_", NULL, 0x2, "I", NULL,  },
    { "mRecordId_", NULL, 0x2, "I", NULL,  },
    { "mIsAllowRu_", NULL, 0x2, "Z", NULL,  },
    { "mIsAllowChu_", NULL, 0x2, "Z", NULL,  },
    { "mTakePhoto_", NULL, 0x2, "Ljava.lang.Object;", NULL,  },
  };
  static J2ObjcClassInfo _ComFqLibRecordSnapPhotoManager = { "SnapPhotoManager", "com.fq.lib.record", NULL, 0x1, 36, methods, 10, fields, 0, NULL};
  return &_ComFqLibRecordSnapPhotoManager;
}

@end
