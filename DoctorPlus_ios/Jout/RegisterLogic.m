//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/liaomin/Documents/workspace/Android/DocPlusLogic/src/com/fq/halcyon/logic/RegisterLogic.java
//
//  Created by liaomin on 15-5-4.
//

#line 1 "/Users/liaomin/Documents/workspace/Android/DocPlusLogic/src/com/fq/halcyon/logic/RegisterLogic.java"

#include "AeSimpleSHA1.h"
#include "ApiSystem.h"
#include "Constants.h"
#include "DES3Utils.h"
#include "FQHeader.h"
#include "FQHttpParams.h"
#include "HttpHelper.h"
#include "HttpRequestPotocol.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "JSONObject.h"
#include "JsonHelper.h"
#include "RegisterLogic.h"
#include "UriConstants.h"
#include "UserAction.h"
#include "UserActionManger.h"
#include "java/lang/Integer.h"
#include "java/lang/System.h"
#include "java/lang/Throwable.h"
#include "java/util/HashMap.h"


#line 22
@implementation ComFqHalcyonLogicRegisterLogic


#line 36
- (void)setListenerWithComFqHalcyonLogicRegisterLogic_RegisterLogicListener:(id<ComFqHalcyonLogicRegisterLogic_RegisterLogicListener>)l {
  
#line 37
  self->mListener_ = l;
}


#line 40
- (id)init {
  return [super init];
}


#line 53
- (void)register__WithInt:(int)roleType
             withNSString:(NSString *)mPhoneNumber
             withNSString:(NSString *)mPassword
             withNSString:(NSString *)vertification
             withNSString:(NSString *)invite
             withNSString:(NSString *)clientVersion
             withNSString:(NSString *)clientType {
  
#line 54
  NSString *key = [ComFqLibPlatformDES3Utils randomStringWithInt:24];
  (void) ComFqLibToolsConstants_set_KEY_STRING_([((NSString *) nil_chk(key)) getBytes]);
  
#line 57
  JavaUtilHashMap *map = [[JavaUtilHashMap alloc] init];
  (void) [map putWithId:@"role_type" withId:[JavaLangInteger valueOfWithInt:roleType]];
  (void) [map putWithId:@"phone_number" withId:mPhoneNumber];
  (void) [map putWithId:@"pass_word" withId:[ComFqLibToolsAeSimpleSHA1 repeat20TimesAndSHA1WithNSString:mPassword]];
  (void) [map putWithId:@"vertification" withId:vertification];
  (void) [map putWithId:@"client_salt" withId:key];
  if (![@"" isEqual:invite]) (void) [map putWithId:@"invitation_code" withId:invite];
  
#line 65
  FQJSONObject *mRegisterJson = [ComFqLibJsonHelper createJsonWithJavaUtilMap:map];
  
#line 67
  [self register__WithFQJSONObject:mRegisterJson withNSString:clientVersion withNSString:clientType];
}


#line 70
- (void)register__WithFQJSONObject:(FQJSONObject *)mRegisterJson
                      withNSString:(NSString *)clientVersion
                      withNSString:(NSString *)clientType {
  
#line 71
  ComFqHttpAsyncFQHttpParams *mFqHttpParams = [[ComFqHttpAsyncFQHttpParams alloc] initWithFQJSONObject:mRegisterJson];
  
#line 73
  NSString *url = [NSString stringWithFormat:@"%@/users/register.do", ComFqLibToolsUriConstants_Conn_get_URL_PUB_()];
  (void) [((ComFqHalcyonApiApiSystem *) nil_chk([ComFqHalcyonApiApiSystem getInstance])) requireWithNSString:url withComFqHttpAsyncFQHttpParams:mFqHttpParams withComFqHalcyonApiApiSystem_API_TYPEEnum:ComFqHalcyonApiApiSystem_API_TYPEEnum_get_DIRECT() withHalcyonHttpResponseHandle:[[ComFqHalcyonLogicRegisterLogic_$1 alloc] initWithComFqHalcyonLogicRegisterLogic:self withNSString:clientType withNSString:clientVersion]];
}


#line 101
- (void)isPhoneExistWithNSString:(NSString *)phoneNumber {
  
#line 102
  JavaUtilHashMap *map = [[JavaUtilHashMap alloc] init];
  (void) [map putWithId:@"phone_number" withId:phoneNumber];
  FQJSONObject *json = [ComFqLibJsonHelper createJsonWithJavaUtilMap:map];
  NSString *url = [NSString stringWithFormat:@"%@/users/check_mobile.do", ComFqLibToolsUriConstants_Conn_get_URL_PUB_()];
  ComFqHttpAsyncFQHttpParams *params = [[ComFqHttpAsyncFQHttpParams alloc] initWithFQJSONObject:json];
  (void) [ComFqLibHttpHelper sendPostRequestWithNSString:url withComFqHttpAsyncFQHttpParams:params withFQHttpResponseHandle:[[ComFqHalcyonLogicRegisterLogic_$2 alloc] initWithComFqHalcyonLogicRegisterLogic:self]];
}

- (void)copyAllFieldsTo:(ComFqHalcyonLogicRegisterLogic *)other {
  [super copyAllFieldsTo:other];
  other->mListener_ = mListener_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "setListenerWithComFqHalcyonLogicRegisterLogic_RegisterLogicListener:", "setListener", "V", 0x1, NULL },
    { "init", "RegisterLogic", NULL, 0x1, NULL },
    { "register__WithInt:withNSString:withNSString:withNSString:withNSString:withNSString:withNSString:", "register", "V", 0x1, NULL },
    { "register__WithFQJSONObject:withNSString:withNSString:", "register", "V", 0x1, NULL },
    { "isPhoneExistWithNSString:", "isPhoneExist", "V", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "mListener_", NULL, 0x1, "Lcom.fq.halcyon.logic.RegisterLogic$RegisterLogicListener;", NULL,  },
  };
  static J2ObjcClassInfo _ComFqHalcyonLogicRegisterLogic = { "RegisterLogic", "com.fq.halcyon.logic", NULL, 0x401, 5, methods, 1, fields, 0, NULL};
  return &_ComFqHalcyonLogicRegisterLogic;
}

@end

@interface ComFqHalcyonLogicRegisterLogic_RegisterLogicListener : NSObject
@end

@implementation ComFqHalcyonLogicRegisterLogic_RegisterLogicListener

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "returnDataWithInt:withFQJSONObject:", "returnData", "V", 0x401, NULL },
    { "errorWithInt:withNSString:", "error", "V", 0x401, NULL },
    { "isPhoneExistWithBoolean:", "isPhoneExist", "V", 0x401, NULL },
  };
  static J2ObjcClassInfo _ComFqHalcyonLogicRegisterLogic_RegisterLogicListener = { "RegisterLogicListener", "com.fq.halcyon.logic", "RegisterLogic", 0x201, 3, methods, 0, NULL, 0, NULL};
  return &_ComFqHalcyonLogicRegisterLogic_RegisterLogicListener;
}

@end

@implementation ComFqHalcyonLogicRegisterLogic_$1


#line 76
- (IOSObjectArray *)getRequestHeaders {
  
#line 77
  IOSObjectArray *fqHeaders = [IOSObjectArray arrayWithLength:2 type:[IOSClass classWithClass:[ComFqHttpAsyncFQHeader class]]];
  (void) IOSObjectArray_Set(fqHeaders, 0, [[ComFqHttpAsyncFQHeader alloc] initWithNSString:@"client_type" withNSString:val$clientType_]);
  (void) IOSObjectArray_Set(fqHeaders, 1, [[ComFqHttpAsyncFQHeader alloc] initWithNSString:@"client_version" withNSString:val$clientVersion_]);
  return fqHeaders;
}


#line 82
- (void)onErrorWithInt:(int)code
 withJavaLangThrowable:(JavaLangThrowable *)e {
  
#line 83
  if (this$0_->mListener_ != nil) [this$0_->mListener_ errorWithInt:code withNSString:[((JavaLangThrowable *) nil_chk(e)) getMessage]];
}


#line 87
- (void)handleWithInt:(int)responseCode
         withNSString:(NSString *)msg
              withInt:(int)type
               withId:(id)results {
  if (responseCode != 0) {
    if (this$0_->mListener_ != nil) [this$0_->mListener_ errorWithInt:responseCode withNSString:msg];
    return;
  }
  if (this$0_->mListener_ != nil) [this$0_->mListener_ returnDataWithInt:responseCode withFQJSONObject:(FQJSONObject *) check_class_cast(results, [FQJSONObject class])];
  
#line 95
  ComFqHalcyonEntityUserAction *action = [[ComFqHalcyonEntityUserAction alloc] initWithLong:[JavaLangSystem currentTimeMillis] withInt:ComFqHalcyonEntityUserAction_ACTION_REGIST withNSString:@"\u5f00\u59cb\u533b\u52a0..."];
  [((ComFqLibUserActionManger *) nil_chk([ComFqLibUserActionManger getInstance])) addActionWithComFqHalcyonEntityUserAction:action];
}

- (id)initWithComFqHalcyonLogicRegisterLogic:(ComFqHalcyonLogicRegisterLogic *)outer$
                                withNSString:(NSString *)capture$0
                                withNSString:(NSString *)capture$1 {
  this$0_ = outer$;
  val$clientType_ = capture$0;
  val$clientVersion_ = capture$1;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "getRequestHeaders", NULL, "[Lcom.fq.http.async.FQHeader;", 0x1, NULL },
    { "onErrorWithInt:withJavaLangThrowable:", "onError", "V", 0x1, NULL },
    { "handleWithInt:withNSString:withInt:withId:", "handle", "V", 0x1, NULL },
    { "initWithComFqHalcyonLogicRegisterLogic:withNSString:withNSString:", "init", NULL, 0x0, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lcom.fq.halcyon.logic.RegisterLogic;", NULL,  },
    { "val$clientType_", NULL, 0x1012, "Ljava.lang.String;", NULL,  },
    { "val$clientVersion_", NULL, 0x1012, "Ljava.lang.String;", NULL,  },
  };
  static J2ObjcClassInfo _ComFqHalcyonLogicRegisterLogic_$1 = { "$1", "com.fq.halcyon.logic", "RegisterLogic", 0x8000, 4, methods, 3, fields, 0, NULL};
  return &_ComFqHalcyonLogicRegisterLogic_$1;
}

@end

@implementation ComFqHalcyonLogicRegisterLogic_$2


#line 108
- (void)handleWithInt:(int)responseCode
         withNSString:(NSString *)msg
              withInt:(int)type
               withId:(id)results {
  
#line 110
  if (responseCode != 0) {
    if (this$0_->mListener_ != nil) [this$0_->mListener_ isPhoneExistWithBoolean:YES];
    
#line 116
    return;
  }
  FQJSONObject *obj = (FQJSONObject *) check_class_cast(results, [FQJSONObject class]);
  if (this$0_->mListener_ != nil) {
    
#line 121
    [this$0_->mListener_ isPhoneExistWithBoolean:[((FQJSONObject *) nil_chk(obj)) optBooleanWithNSString:@"phone_number_exists" withBoolean:YES]];
  }
}


#line 129
- (void)onErrorWithInt:(int)code
 withJavaLangThrowable:(JavaLangThrowable *)e {
  
#line 130
  if (this$0_->mListener_ != nil) [this$0_->mListener_ errorWithInt:-11 withNSString:[((JavaLangThrowable *) nil_chk(e)) getMessage]];
}

- (id)initWithComFqHalcyonLogicRegisterLogic:(ComFqHalcyonLogicRegisterLogic *)outer$ {
  this$0_ = outer$;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "handleWithInt:withNSString:withInt:withId:", "handle", "V", 0x1, NULL },
    { "onErrorWithInt:withJavaLangThrowable:", "onError", "V", 0x1, NULL },
    { "initWithComFqHalcyonLogicRegisterLogic:", "init", NULL, 0x0, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lcom.fq.halcyon.logic.RegisterLogic;", NULL,  },
  };
  static J2ObjcClassInfo _ComFqHalcyonLogicRegisterLogic_$2 = { "$2", "com.fq.halcyon.logic", "RegisterLogic", 0x8000, 3, methods, 1, fields, 0, NULL};
  return &_ComFqHalcyonLogicRegisterLogic_$2;
}

@end
