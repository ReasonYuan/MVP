//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/liaomin/Documents/workspace/Android/DocPlusLogic/src/com/fq/halcyon/extend/filesystem/FileSystem.java
//
//  Created by liaomin on 15-5-4.
//

#line 1 "/Users/liaomin/Documents/workspace/Android/DocPlusLogic/src/com/fq/halcyon/extend/filesystem/FileSystem.java"

#include "Constants.h"
#include "DES3Utils.h"
#include "Encryption.h"
#include "FQHttpParams.h"
#include "FileHelper.h"
#include "FileSystem.h"
#include "HalcyonEntity.h"
#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "JSONException.h"
#include "JSONObject.h"
#include "MD5.h"
#include "PathUrlMap.h"
#include "Tool.h"
#include "User.h"
#include "java/io/File.h"
#include "java/io/FileInputStream.h"
#include "java/io/IOException.h"
#include "java/lang/Exception.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/Thread.h"
#include "java/util/ArrayList.h"


#line 25
@implementation ComFqHalcyonExtendFilesystemFileSystem

NSString * ComFqHalcyonExtendFilesystemFileSystem_USER_DIR_ = 
#line 29
@"gfa/";
ComFqHalcyonExtendFilesystemFileSystem * ComFqHalcyonExtendFilesystemFileSystem_instance_;
NSString * ComFqHalcyonExtendFilesystemFileSystem_RED_IMG_FT_ = 
#line 34
@".jpg";
NSString * ComFqHalcyonExtendFilesystemFileSystem_RECORD_FOLDER_ = 
#line 37
@"\u533b\u52a0/";


#line 47
- (id)init {
  if (self = [super init]) {
    
#line 48
    mPhoneRootPath_ = nil;
  }
  return self;
}


#line 52
+ (ComFqHalcyonExtendFilesystemFileSystem *)getInstance {
  
#line 53
  if (ComFqHalcyonExtendFilesystemFileSystem_instance_ == nil) {
    @throw [[JavaLangRuntimeException alloc] initWithNSString:@"FileSystem root not set!"];
  }
  return ComFqHalcyonExtendFilesystemFileSystem_instance_;
}


#line 59
+ (void)initWithRootPathWithNSString:(NSString *)phoenRootPath
                        withNSString:(NSString *)sdCardRootPath {
  
#line 60
  ComFqHalcyonExtendFilesystemFileSystem_instance_ = [[ComFqHalcyonExtendFilesystemFileSystem alloc] init];
  ComFqHalcyonExtendFilesystemFileSystem_instance_->mPhoneRootPath_ = phoenRootPath;
  ComFqHalcyonExtendFilesystemFileSystem_instance_->mSDCardRootPath_ = sdCardRootPath;
  ComFqHalcyonExtendFilesystemFileSystem_instance_->mImageRootPath_ = [NSString stringWithFormat:@"%@images/", ComFqHalcyonExtendFilesystemFileSystem_instance_->mSDCardRootPath_];
  
#line 65
  if (ComFqHalcyonExtendFilesystemFileSystem_instance_->mPhoneRootPath_ != nil) {
    JavaIoFile *file = [[JavaIoFile alloc] initWithNSString:ComFqHalcyonExtendFilesystemFileSystem_instance_->mPhoneRootPath_];
    if (![file exists])
#line 68
    [file mkdirs];
  }
  else {
    
#line 70
    @throw [[JavaLangRuntimeException alloc] initWithNSString:@"FileSystem root not set!"];
  }
}


#line 75
- (NSString *)getPhoneRootPath {
  
#line 76
  return mPhoneRootPath_;
}


#line 80
- (NSString *)getSDCardRootPath {
  return mSDCardRootPath_;
}


#line 85
- (NSString *)getSDCImgRootPath {
  
#line 86
  return mImageRootPath_;
}


#line 94
- (NSString *)getMD5UserIdWithNSString:(NSString *)userId {
  
#line 95
  return [ComFqLibToolsMD5 Md5WithNSString:userId];
}


#line 103
- (NSString *)getCurrentMD5Id {
  
#line 104
  return [self getMD5UserIdWithNSString:[NSString stringWithFormat:@"%d", [((ComFqHalcyonEntityUser *) nil_chk([ComFqLibToolsConstants getUser])) getUserId]]];
}


#line 113
- (NSString *)getUserPath {
  
#line 114
  return [NSString stringWithFormat:@"%@gfa/%@/", ((ComFqHalcyonExtendFilesystemFileSystem *) nil_chk(ComFqHalcyonExtendFilesystemFileSystem_instance_))->mPhoneRootPath_, [self getMD5UserIdWithNSString:[NSString stringWithFormat:@"%d", [((ComFqHalcyonEntityUser *) nil_chk([ComFqLibToolsConstants getUser])) getUserId]]]];
}


#line 117
- (NSString *)getUserPatientsPath {
  
#line 118
  return [NSString stringWithFormat:@"%@gfa/%@/patients/", ((ComFqHalcyonExtendFilesystemFileSystem *) nil_chk(ComFqHalcyonExtendFilesystemFileSystem_instance_))->mPhoneRootPath_, [self getMD5UserIdWithNSString:[NSString stringWithFormat:@"%d", [((ComFqHalcyonEntityUser *) nil_chk([ComFqLibToolsConstants getUser])) getUserId]]]];
}


#line 127
- (NSString *)getUserPathWithNSString:(NSString *)id_ {
  
#line 128
  return [NSString stringWithFormat:@"%@gfa/%@/", ((ComFqHalcyonExtendFilesystemFileSystem *) nil_chk(ComFqHalcyonExtendFilesystemFileSystem_instance_))->mPhoneRootPath_, [self getMD5UserIdWithNSString:id_]];
}


#line 136
- (NSString *)getFriendPath {
  
#line 137
  return [NSString stringWithFormat:@"%@head/", mImageRootPath_];
}


#line 147
- (NSString *)getFriendPathWithImageIdWithInt:(int)imageId {
  
#line 148
  return [NSString stringWithFormat:@"%@head/%d", mImageRootPath_, imageId];
}


#line 156
- (NSString *)getOthersPath {
  
#line 157
  return [NSString stringWithFormat:@"%@others/", ((ComFqHalcyonExtendFilesystemFileSystem *) nil_chk(ComFqHalcyonExtendFilesystemFileSystem_instance_))->mSDCardRootPath_];
}


#line 165
- (NSString *)getImgTempPath {
  
#line 166
  NSString *path = [NSString stringWithFormat:@"%@tmp/", mImageRootPath_];
  JavaIoFile *file = [[JavaIoFile alloc] initWithNSString:path];
  if (![file exists])
#line 169
  [file mkdirs];
  return [NSString stringWithFormat:@"%@tmp/", mImageRootPath_];
}


#line 178
- (NSString *)getRecordImgPath {
  
#line 179
  return [NSString stringWithFormat:@"%@%@", mImageRootPath_, ComFqHalcyonExtendFilesystemFileSystem_RECORD_FOLDER_];
}


#line 187
- (void)saveUserWithComFqHalcyonEntityUser:(ComFqHalcyonEntityUser *)user {
  
#line 188
  if (user != nil && [user getUserId] == 0)
#line 189
  return;
  [self encryptUserInfoWithComFqHalcyonEntityUser:user];
}

- (void)saveCurrentUser {
  
#line 197
  ComFqHalcyonEntityUser *user = [ComFqLibToolsConstants getUser];
  if (user != nil && [user getUserId] != 0) {
    [self encryptUserInfoWithComFqHalcyonEntityUser:user];
  }
}


#line 206
- (void)encryptUserInfoWithComFqHalcyonEntityUser:(ComFqHalcyonEntityUser *)user {
  
#line 207
  JavaIoFileInputStream *fileInputStream = nil;
  @try {
    JavaIoFile *file = [[JavaIoFile alloc] initWithNSString:[((ComFqHalcyonExtendFilesystemFileSystem *) nil_chk(ComFqHalcyonExtendFilesystemFileSystem_instance_)) getUserPath]];
    if (![file exists]) {
      [file mkdirs];
    }
    
#line 214
    IOSByteArray *buffer = [((NSString *) nil_chk([((FQJSONObject *) nil_chk([((ComFqHalcyonEntityUser *) nil_chk(user)) getJson])) description])) getBytes];
    
#line 223
    NSString *str = [NSString stringWithBytes:buffer charsetName:@"UTF-8"];
    NSString *miwen = [NSString stringWithString:[ComFqLibPlatformDES3Utils encryptModeWithByteArray:[str getBytes] withByteArray:ComFqLibToolsConstants_get_KEY_STRING_()]];
    [ComFqLibFileHelper saveFileWithNSString:miwen withNSString:[ComFqHalcyonExtendFilesystemFileSystem_instance_ getUserPath] withNSString:@"pre.dp" withBoolean:NO];
  }
  @catch (
#line 226
  JavaIoIOException *e) {
    [((JavaIoIOException *) nil_chk(e)) printStackTrace];
  }
  @finally {
    
#line 229
    if (fileInputStream != nil) {
      @try {
        [fileInputStream close];
        fileInputStream = nil;
      }
      @catch (
#line 233
      JavaIoIOException *e) {
        [((JavaIoIOException *) nil_chk(e)) printStackTrace];
      }
    }
  }
}


#line 243
- (NSString *)deEncryptUserInfoWithNSString:(NSString *)str {
  
#line 252
  NSString *minwenStr = [NSString stringWithString:[ComFqLibPlatformDES3Utils decryptModeWithByteArray:[((NSString *) nil_chk(str)) getBytes] withByteArray:ComFqLibToolsConstants_get_KEY_STRING_()]];
  
#line 255
  return minwenStr;
}


#line 262
- (ComFqHalcyonEntityUser *)loadCurrentUser {
  
#line 263
  JavaUtilArrayList *keyPwd = [self loadLoginUser];
  if (keyPwd == nil) {
    return [[ComFqHalcyonEntityUser alloc] init];
  }
  else {
    
#line 267
    @try {
      NSString *id_ = [keyPwd getWithInt:2];
      if (![@"" isEqual:id_])
#line 270
      return [self loadUserWithNSString:id_];
      return [[ComFqHalcyonEntityUser alloc] init];
    }
    @catch (
#line 272
    JavaLangException *e) {
      return [[ComFqHalcyonEntityUser alloc] init];
    }
  }
}


#line 283
- (ComFqHalcyonEntityUser *)loadUserWithNSString:(NSString *)id_ {
  
#line 284
  @try {
    if (id_ != nil && ![id_ isEqual:@""]) {
      NSString *userJsonString = [ComFqLibFileHelper readStringWithNSString:[((ComFqHalcyonExtendFilesystemFileSystem *) nil_chk(ComFqHalcyonExtendFilesystemFileSystem_instance_)) getUserPathWithNSString:id_] withNSString:@"pre.dp" withBoolean:NO];
      
#line 288
      if (userJsonString != nil && ![@"" isEqual:[userJsonString trim]]) {
        ComFqHalcyonEntityUser *user = [[ComFqHalcyonEntityUser alloc] init];
        [user setAtttributeByjsonWithFQJSONObject:[[FQJSONObject alloc] initWithNSString:[self deEncryptUserInfoWithNSString:userJsonString]]];
        return user;
      }
    }
  }
  @catch (
#line 294
  JavaLangException *e) {
    [((JavaLangException *) nil_chk(e)) printStackTrace];
  }
  return [[ComFqHalcyonEntityUser alloc] init];
}


#line 303
- (void)saveLoginUserWithNSString:(NSString *)phone
                     withNSString:(NSString *)pwd
                          withInt:(int)id_ {
  
#line 304
  @try {
    FQJSONObject *object = [[FQJSONObject alloc] init];
    (void) [object putWithNSString:@"dph" withId:phone];
    (void) [object putWithNSString:@"dpp" withId:pwd];
    (void) [object putWithNSString:@"dpi" withId:[NSString stringWithFormat:@"%d", id_]];
    [ComFqLibFileHelper saveFileWithNSString:[ComFqLibToolsEncryption encryptionWithNSString:[object description] withNSString:ComFqLibToolsConstants_get_KEY_CTS_()] withNSString:mPhoneRootPath_ withNSString:@"cts.dp" withBoolean:NO];
  }
  @catch (
#line 310
  JavaLangException *e) {
    [((JavaLangException *) nil_chk(e)) printStackTrace];
  }
}


#line 319
- (JavaUtilArrayList *)loadLoginUser {
  
#line 320
  @try {
    NSString *current = [ComFqLibFileHelper readStringWithNSString:mPhoneRootPath_ withNSString:@"cts.dp" withBoolean:NO];
    if (current != nil && ![current isEqual:@""]) {
      FQJSONObject *object = [[FQJSONObject alloc] initWithNSString:[ComFqLibToolsEncryption dencryptionWithNSString:current withNSString:ComFqLibToolsConstants_get_KEY_CTS_()]];
      NSString *phone = [object optStringWithNSString:@"dph"];
      NSString *pwd = [object optStringWithNSString:@"dpp"];
      NSString *id_ = [object optStringWithNSString:@"dpi"];
      JavaUtilArrayList *info = [[JavaUtilArrayList alloc] init];
      [info addWithId:phone];
      [info addWithId:pwd];
      [info addWithId:id_];
      return info;
    }
    return nil;
  }
  @catch (
#line 334
  FQJSONException *e) {
    [((FQJSONException *) nil_chk(e)) printStackTrace];
  }
  return nil;
}


#line 389
- (FQJSONObject *)loadUserAuthState {
  
#line 390
  @try {
    FQJSONObject *object = [[FQJSONObject alloc] initWithNSString:[ComFqLibFileHelper readStringWithNSString:[((ComFqHalcyonExtendFilesystemFileSystem *) nil_chk(ComFqHalcyonExtendFilesystemFileSystem_instance_)) getUserPath] withNSString:@"certification.json" withBoolean:NO]];
    return object;
  }
  @catch (
#line 393
  FQJSONException *e) {
    [((FQJSONException *) nil_chk(e)) printStackTrace];
    return nil;
  }
}


#line 402
- (void)saveEntityWithComFqHalcyonEntityHalcyonEntity:(ComFqHalcyonEntityHalcyonEntity *)entity {
  
#line 403
  @try {
    if (entity == nil)
#line 405
    return;
    [ComFqLibFileHelper saveFileWithNSString:[((FQJSONObject *) nil_chk([((ComFqHalcyonEntityHalcyonEntity *) nil_chk(entity)) getJson])) description] withNSString:[((ComFqHalcyonExtendFilesystemFileSystem *) nil_chk(ComFqHalcyonExtendFilesystemFileSystem_instance_)) getUserPath] withNSString:[[entity getClass] getSimpleName] withBoolean:NO];
  }
  @catch (
#line 407
  JavaLangException *e) {
  }
}


#line 411
- (BOOL)comparePasswordWithNSString:(NSString *)phoneNumber
                       withNSString:(NSString *)password {
  
#line 412
  NSString *path = [NSString stringWithFormat:@"%@gfa/%@", mPhoneRootPath_, phoneNumber];
  JavaIoFile *file = [[JavaIoFile alloc] initWithNSString:path];
  if ([file exists]) {
    @try {
      FQJSONObject *object = [[FQJSONObject alloc] initWithNSString:[ComFqLibFileHelper readStringWithNSString:path withNSString:@"pre.dp" withBoolean:NO]];
      
#line 418
      ComFqHalcyonEntityUser *user = [[ComFqHalcyonEntityUser alloc] init];
      [user setAtttributeByjsonWithFQJSONObject:object];
      if ([((NSString *) nil_chk([user getPassword])) isEqual:password]) {
        return YES;
      }
    }
    @catch (
#line 423
    JavaLangException *e) {
    }
  }
  return NO;
}


#line 434
- (NSString *)getUserImagePath {
  
#line 435
  return [NSString stringWithFormat:@"%@gfa/%@/img/", mPhoneRootPath_, [self getMD5UserIdWithNSString:[NSString stringWithFormat:@"%d", [((ComFqHalcyonEntityUser *) nil_chk([ComFqLibToolsConstants getUser])) getUserId]]]];
}


#line 443
- (NSString *)getUserApiPath {
  
#line 444
  return [NSString stringWithFormat:@"%@gfa/%@/api", mPhoneRootPath_, [self getMD5UserIdWithNSString:[NSString stringWithFormat:@"%d", [((ComFqHalcyonEntityUser *) nil_chk([ComFqLibToolsConstants getUser])) getUserId]]]];
}


#line 452
- (NSString *)getRecordCachePath {
  
#line 453
  NSString *path = [NSString stringWithFormat:@"%@ds/", [self getUserPath]];
  JavaIoFile *file = [[JavaIoFile alloc] initWithNSString:path];
  if (![file exists]) {
    [file mkdirs];
  }
  return path;
}


#line 465
- (NSString *)getUserCachePath {
  
#line 466
  NSString *path = [NSString stringWithFormat:@"%@%@/", [self getUserPath], [ComFqLibToolsMD5 Md5WithNSString:@"cache"]];
  JavaIoFile *file = [[JavaIoFile alloc] initWithNSString:path];
  if (![file exists]) {
    [file mkdirs];
  }
  return path;
}


#line 479
- (NSString *)getUserLoopPath {
  
#line 480
  return [NSString stringWithFormat:@"%@gfa/%@/loop", mPhoneRootPath_, [self getMD5UserIdWithNSString:[NSString stringWithFormat:@"%d", [((ComFqHalcyonEntityUser *) nil_chk([ComFqLibToolsConstants getUser])) getUserId]]]];
}


#line 488
- (NSString *)getUserHeadName {
  
#line 489
  return @"head";
}


#line 497
- (NSString *)getUserHeadPath {
  
#line 498
  return [NSString stringWithFormat:@"%@%@", [((ComFqHalcyonExtendFilesystemFileSystem *) nil_chk([ComFqHalcyonExtendFilesystemFileSystem getInstance])) getUserImagePath], [((ComFqHalcyonExtendFilesystemFileSystem *) nil_chk([ComFqHalcyonExtendFilesystemFileSystem getInstance])) getUserHeadName]];
}


#line 507
- (NSString *)getAuthImgNameByTypeWithInt:(int)type {
  
#line 508
  return [NSString stringWithFormat:@"auth%d", type];
}


#line 518
- (NSString *)getAuthImgPathByTypeWithInt:(int)type {
  
#line 519
  return [NSString stringWithFormat:@"%@%@", [((ComFqHalcyonExtendFilesystemFileSystem *) nil_chk([ComFqHalcyonExtendFilesystemFileSystem getInstance])) getUserImagePath], [self getAuthImgNameByTypeWithInt:type]];
}


#line 523
- (NSString *)getUserActionPath {
  return [NSString stringWithFormat:@"%@acts", [self getUserPath]];
}


#line 532
- (NSString *)getCacheSize {
  
#line 533
  long long int size = 0;
  JavaIoFile *file = [[JavaIoFile alloc] initWithNSString:[((ComFqHalcyonExtendFilesystemFileSystem *) nil_chk([ComFqHalcyonExtendFilesystemFileSystem getInstance])) getRecordImgPath]];
  if ([file exists]) {
    size = [ComFqLibFileHelper getFileSizeWithJavaIoFile:file];
    return [NSString stringWithFormat:@"%@", [ComFqLibToolsTool getSizeWithLong:size]];
  }
  else {
    
#line 539
    return @"0B";
  }
}

- (NSString *)clearCache {
  
#line 549
  JavaIoFile *file = [[JavaIoFile alloc] initWithNSString:[((ComFqHalcyonExtendFilesystemFileSystem *) nil_chk([ComFqHalcyonExtendFilesystemFileSystem getInstance])) getRecordImgPath]];
  [((JavaLangThread *) [[JavaLangThread alloc] initWithJavaLangRunnable:[[ComFqHalcyonExtendFilesystemFileSystem_$1 alloc] initWithJavaIoFile:file]]) start];
  
#line 556
  return @"0B";
}


#line 673
- (BOOL)isApiUrlWithNSString:(NSString *)url {
  
#line 674
  return ![((NSString *) nil_chk(url)) hasSuffix:@".png"] || ![url hasSuffix:@".jpg"];
}


#line 677
- (NSString *)getLocalPathWithNSString:(NSString *)url
        withComFqHttpAsyncFQHttpParams:(ComFqHttpAsyncFQHttpParams *)params {
  
#line 678
  NSString *localPath = nil;
  localPath = [ComFqHalcyonExtendFilesystemPathUrlMap getLocalPathWithNSString:url withComFqHttpAsyncFQHttpParams:params];
  if (localPath != nil)
#line 681
  return localPath;
  NSString *realUrl = url;
  BOOL isApiType = [self isApiUrlWithNSString:url];
  if (params != nil) {
    @try {
      id version_ = [((FQJSONObject *) nil_chk([params getJson])) removeWithNSString:@"version"];
      if ([((FQJSONObject *) nil_chk([params getJson])) length] != 0) {
        realUrl = [NSString stringWithFormat:@"%@%@", realUrl, [params getStringParams]];
      }
      if (version_ != nil) {
        @try {
          (void) [((FQJSONObject *) nil_chk([params getJson])) putWithNSString:@"version" withId:version_];
        }
        @catch (
#line 693
        FQJSONException *e) {
        }
      }
    }
    @catch (
#line 696
    JavaLangException *e) {
      [((JavaLangException *) nil_chk(e)) printStackTrace];
    }
  }
  if (isApiType) {
    NSString *apiPath = [NSString stringWithFormat:@"%@/", [self getUserApiPath]];
    return [NSString stringWithFormat:@"%@%@", apiPath, [ComFqLibToolsMD5 Md5WithNSString:realUrl]];
  }
  else {
    return [((ComFqHalcyonExtendFilesystemFileSystem *) nil_chk([ComFqHalcyonExtendFilesystemFileSystem getInstance])) getRecordImgPath];
  }
}


#line 710
- (void)saveRecordImgWithByteArray:(IOSByteArray *)bys
                      withNSString:(NSString *)name {
  
#line 711
  [ComFqLibFileHelper saveFileWithByteArray:bys withNSString:[self getRecordImgPath] withNSString:name];
}

- (void)copyAllFieldsTo:(ComFqHalcyonExtendFilesystemFileSystem *)other {
  [super copyAllFieldsTo:other];
  other->mImageRootPath_ = mImageRootPath_;
  other->mPhoneRootPath_ = mPhoneRootPath_;
  other->mSDCardRootPath_ = mSDCardRootPath_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "init", "FileSystem", NULL, 0x2, NULL },
    { "getInstance", NULL, "Lcom.fq.halcyon.extend.filesystem.FileSystem;", 0x9, NULL },
    { "initWithRootPathWithNSString:withNSString:", "initWithRootPath", "V", 0x9, NULL },
    { "getPhoneRootPath", NULL, "Ljava.lang.String;", 0x1, NULL },
    { "getSDCardRootPath", NULL, "Ljava.lang.String;", 0x1, NULL },
    { "getSDCImgRootPath", NULL, "Ljava.lang.String;", 0x1, NULL },
    { "getMD5UserIdWithNSString:", "getMD5UserId", "Ljava.lang.String;", 0x1, NULL },
    { "getCurrentMD5Id", NULL, "Ljava.lang.String;", 0x1, NULL },
    { "getUserPath", NULL, "Ljava.lang.String;", 0x1, NULL },
    { "getUserPatientsPath", NULL, "Ljava.lang.String;", 0x1, NULL },
    { "getUserPathWithNSString:", "getUserPath", "Ljava.lang.String;", 0x1, NULL },
    { "getFriendPath", NULL, "Ljava.lang.String;", 0x1, NULL },
    { "getFriendPathWithImageIdWithInt:", "getFriendPathWithImageId", "Ljava.lang.String;", 0x1, NULL },
    { "getOthersPath", NULL, "Ljava.lang.String;", 0x1, NULL },
    { "getImgTempPath", NULL, "Ljava.lang.String;", 0x1, NULL },
    { "getRecordImgPath", NULL, "Ljava.lang.String;", 0x1, NULL },
    { "saveUserWithComFqHalcyonEntityUser:", "saveUser", "V", 0x1, NULL },
    { "saveCurrentUser", NULL, "V", 0x1, NULL },
    { "encryptUserInfoWithComFqHalcyonEntityUser:", "encryptUserInfo", "V", 0x1, NULL },
    { "deEncryptUserInfoWithNSString:", "deEncryptUserInfo", "Ljava.lang.String;", 0x1, NULL },
    { "loadCurrentUser", NULL, "Lcom.fq.halcyon.entity.User;", 0x1, NULL },
    { "loadUserWithNSString:", "loadUser", "Lcom.fq.halcyon.entity.User;", 0x1, NULL },
    { "saveLoginUserWithNSString:withNSString:withInt:", "saveLoginUser", "V", 0x1, NULL },
    { "loadLoginUser", NULL, "Ljava.util.ArrayList;", 0x1, NULL },
    { "loadUserAuthState", NULL, "Lcom.fq.lib.json.JSONObject;", 0x1, NULL },
    { "saveEntityWithComFqHalcyonEntityHalcyonEntity:", "saveEntity", "V", 0x1, NULL },
    { "comparePasswordWithNSString:withNSString:", "comparePassword", "Z", 0x1, NULL },
    { "getUserImagePath", NULL, "Ljava.lang.String;", 0x1, NULL },
    { "getUserApiPath", NULL, "Ljava.lang.String;", 0x1, NULL },
    { "getRecordCachePath", NULL, "Ljava.lang.String;", 0x1, NULL },
    { "getUserCachePath", NULL, "Ljava.lang.String;", 0x1, NULL },
    { "getUserLoopPath", NULL, "Ljava.lang.String;", 0x1, NULL },
    { "getUserHeadName", NULL, "Ljava.lang.String;", 0x1, NULL },
    { "getUserHeadPath", NULL, "Ljava.lang.String;", 0x1, NULL },
    { "getAuthImgNameByTypeWithInt:", "getAuthImgNameByType", "Ljava.lang.String;", 0x1, NULL },
    { "getAuthImgPathByTypeWithInt:", "getAuthImgPathByType", "Ljava.lang.String;", 0x1, NULL },
    { "getUserActionPath", NULL, "Ljava.lang.String;", 0x1, NULL },
    { "getCacheSize", NULL, "Ljava.lang.String;", 0x1, NULL },
    { "clearCache", NULL, "Ljava.lang.String;", 0x1, NULL },
    { "isApiUrlWithNSString:", "isApiUrl", "Z", 0x2, NULL },
    { "getLocalPathWithNSString:withComFqHttpAsyncFQHttpParams:", "getLocalPath", "Ljava.lang.String;", 0x2, NULL },
    { "saveRecordImgWithByteArray:withNSString:", "saveRecordImg", "V", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "USER_DIR_", NULL, 0x1a, "Ljava.lang.String;", &ComFqHalcyonExtendFilesystemFileSystem_USER_DIR_,  },
    { "instance_", NULL, 0xa, "Lcom.fq.halcyon.extend.filesystem.FileSystem;", &ComFqHalcyonExtendFilesystemFileSystem_instance_,  },
    { "RED_IMG_FT_", NULL, 0x9, "Ljava.lang.String;", &ComFqHalcyonExtendFilesystemFileSystem_RED_IMG_FT_,  },
    { "RECORD_FOLDER_", NULL, 0x9, "Ljava.lang.String;", &ComFqHalcyonExtendFilesystemFileSystem_RECORD_FOLDER_,  },
    { "mPhoneRootPath_", NULL, 0x2, "Ljava.lang.String;", NULL,  },
    { "mSDCardRootPath_", NULL, 0x2, "Ljava.lang.String;", NULL,  },
    { "mImageRootPath_", NULL, 0x2, "Ljava.lang.String;", NULL,  },
  };
  static J2ObjcClassInfo _ComFqHalcyonExtendFilesystemFileSystem = { "FileSystem", "com.fq.halcyon.extend.filesystem", NULL, 0x1, 42, methods, 7, fields, 0, NULL};
  return &_ComFqHalcyonExtendFilesystemFileSystem;
}

@end

@implementation ComFqHalcyonExtendFilesystemFileSystem_$1


#line 552
- (void)run {
  
#line 553
  [ComFqLibFileHelper deleteFileWithJavaIoFile:val$file_ withBoolean:NO];
}

- (id)initWithJavaIoFile:(JavaIoFile *)capture$0 {
  val$file_ = capture$0;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "run", NULL, "V", 0x1, NULL },
    { "initWithJavaIoFile:", "init", NULL, 0x0, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "val$file_", NULL, 0x1012, "Ljava.io.File;", NULL,  },
  };
  static J2ObjcClassInfo _ComFqHalcyonExtendFilesystemFileSystem_$1 = { "$1", "com.fq.halcyon.extend.filesystem", "FileSystem", 0x8000, 2, methods, 1, fields, 0, NULL};
  return &_ComFqHalcyonExtendFilesystemFileSystem_$1;
}

@end
