//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/liaomin/Documents/workspace/Android/DocPlusLogic/src/com/fq/lib/json/JSONStringer.java
//
//  Created by liaomin on 15-5-4.
//

#line 1 "/Users/liaomin/Documents/workspace/Android/DocPlusLogic/src/com/fq/lib/json/JSONStringer.java"

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "JSONArray.h"
#include "JSONException.h"
#include "JSONObject.h"
#include "JSONStringer.h"
#include "java/lang/Boolean.h"
#include "java/lang/Double.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/StringBuilder.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/List.h"


#line 61
@implementation FQJSONStringer


#line 122
- (id)init {
  if (self = [super init]) {
    out_ =
#line 64
    [[JavaLangStringBuilder alloc] init];
    stack_ =
#line 114
    [[JavaUtilArrayList alloc] init];
    
#line 123
    indent_ = nil;
  }
  return self;
}


#line 126
- (id)initWithInt:(int)indentSpaces {
  if (self = [super init]) {
    out_ =
#line 64
    [[JavaLangStringBuilder alloc] init];
    stack_ =
#line 114
    [[JavaUtilArrayList alloc] init];
    
#line 127
    IOSCharArray *indentChars = [IOSCharArray arrayWithLength:indentSpaces];
    
#line 128
    [JavaUtilArrays fillWithCharArray:indentChars withChar:' '];
    
#line 129
    indent_ = [NSString stringWithCharacters:indentChars];
  }
  return self;
}


#line 138
- (FQJSONStringer *)array {
  
#line 139
  return [self openWithFQJSONStringer_ScopeEnum:FQJSONStringer_ScopeEnum_get_EMPTY_ARRAY() withNSString:@"["];
}


#line 147
- (FQJSONStringer *)endArray {
  
#line 148
  return [self closeWithFQJSONStringer_ScopeEnum:FQJSONStringer_ScopeEnum_get_EMPTY_ARRAY() withFQJSONStringer_ScopeEnum:FQJSONStringer_ScopeEnum_get_NONEMPTY_ARRAY() withNSString:@"]"];
}


#line 157
- (FQJSONStringer *)object {
  
#line 158
  return [self openWithFQJSONStringer_ScopeEnum:FQJSONStringer_ScopeEnum_get_EMPTY_OBJECT() withNSString:@"{"];
}


#line 166
- (FQJSONStringer *)endObject {
  
#line 167
  return [self closeWithFQJSONStringer_ScopeEnum:FQJSONStringer_ScopeEnum_get_EMPTY_OBJECT() withFQJSONStringer_ScopeEnum:FQJSONStringer_ScopeEnum_get_NONEMPTY_OBJECT() withNSString:@"}"];
}


#line 174
- (FQJSONStringer *)openWithFQJSONStringer_ScopeEnum:(FQJSONStringer_ScopeEnum *)empty
                                        withNSString:(NSString *)openBracket {
  
#line 175
  if ([((id<JavaUtilList>) nil_chk(stack_)) isEmpty] && [((JavaLangStringBuilder *) nil_chk(out_)) sequenceLength] > 0) {
    @throw [[FQJSONException alloc] initWithNSString:@"Nesting problem: multiple top-level roots"];
  }
  [self beforeValue];
  [stack_ addWithId:empty];
  (void) [((JavaLangStringBuilder *) nil_chk(out_)) appendWithNSString:openBracket];
  return self;
}


#line 188
- (FQJSONStringer *)closeWithFQJSONStringer_ScopeEnum:(FQJSONStringer_ScopeEnum *)empty
                         withFQJSONStringer_ScopeEnum:(FQJSONStringer_ScopeEnum *)nonempty
                                         withNSString:(NSString *)closeBracket {
  
#line 189
  FQJSONStringer_ScopeEnum *context = [self peek];
  if (context != nonempty && context != empty) {
    @throw [[FQJSONException alloc] initWithNSString:@"Nesting problem"];
  }
  
#line 194
  (void) [stack_ removeWithInt:[((id<JavaUtilList>) nil_chk(stack_)) size] - 1];
  if (context == nonempty) {
    [self newline];
  }
  (void) [((JavaLangStringBuilder *) nil_chk(out_)) appendWithNSString:closeBracket];
  return self;
}


#line 205
- (FQJSONStringer_ScopeEnum *)peek {
  
#line 206
  if ([((id<JavaUtilList>) nil_chk(stack_)) isEmpty]) {
    @throw [[FQJSONException alloc] initWithNSString:@"Nesting problem"];
  }
  return [stack_ getWithInt:[stack_ size] - 1];
}


#line 215
- (void)replaceTopWithFQJSONStringer_ScopeEnum:(FQJSONStringer_ScopeEnum *)topOfStack {
  
#line 216
  (void) [stack_ setWithInt:[((id<JavaUtilList>) nil_chk(stack_)) size] - 1 withId:topOfStack];
}


#line 227
- (FQJSONStringer *)valueWithId:(id)value {
  
#line 228
  if ([((id<JavaUtilList>) nil_chk(stack_)) isEmpty]) {
    @throw [[FQJSONException alloc] initWithNSString:@"Nesting problem"];
  }
  
#line 232
  if ([value isKindOfClass:[FQJSONArray class]]) {
    [((FQJSONArray *) nil_chk(((FQJSONArray *) check_class_cast(value, [FQJSONArray class])))) writeToWithFQJSONStringer:self];
    return self;
  }
  else if ([value isKindOfClass:[FQJSONObject class]]) {
    [((FQJSONObject *) nil_chk(((FQJSONObject *) check_class_cast(value, [FQJSONObject class])))) writeToWithFQJSONStringer:self];
    return self;
  }
  
#line 241
  [self beforeValue];
  
#line 243
  if (value == nil ||
#line 244
  [value isKindOfClass:[JavaLangBoolean class]] ||
#line 245
  value == FQJSONObject_get_NULL__()) {
    (void) [((JavaLangStringBuilder *) nil_chk(out_)) appendWithId:value];
  }
  else if ([value isKindOfClass:[NSNumber class]]) {
    (void) [((JavaLangStringBuilder *) nil_chk(out_)) appendWithNSString:[FQJSONObject numberToStringWithNSNumber:(NSNumber *) check_class_cast(value, [NSNumber class])]];
  }
  else {
    [self stringWithNSString:[value description]];
  }
  
#line 255
  return self;
}


#line 263
- (FQJSONStringer *)valueWithBoolean:(BOOL)value {
  
#line 264
  if ([((id<JavaUtilList>) nil_chk(stack_)) isEmpty]) {
    @throw [[FQJSONException alloc] initWithNSString:@"Nesting problem"];
  }
  [self beforeValue];
  (void) [((JavaLangStringBuilder *) nil_chk(out_)) appendWithBoolean:value];
  return self;
}


#line 279
- (FQJSONStringer *)valueWithDouble:(double)value {
  
#line 280
  if ([((id<JavaUtilList>) nil_chk(stack_)) isEmpty]) {
    @throw [[FQJSONException alloc] initWithNSString:@"Nesting problem"];
  }
  [self beforeValue];
  (void) [((JavaLangStringBuilder *) nil_chk(out_)) appendWithNSString:[FQJSONObject numberToStringWithNSNumber:[JavaLangDouble valueOfWithDouble:value]]];
  return self;
}


#line 293
- (FQJSONStringer *)valueWithLong:(long long int)value {
  
#line 294
  if ([((id<JavaUtilList>) nil_chk(stack_)) isEmpty]) {
    @throw [[FQJSONException alloc] initWithNSString:@"Nesting problem"];
  }
  [self beforeValue];
  (void) [((JavaLangStringBuilder *) nil_chk(out_)) appendWithLong:value];
  return self;
}


#line 302
- (void)stringWithNSString:(NSString *)value {
  
#line 303
  (void) [((JavaLangStringBuilder *) nil_chk(out_)) appendWithNSString:@"\""];
  for (int i = 0, length = ((int) [((NSString *) nil_chk(value)) length]); i < length; i++) {
    unichar c = [value charAtWithInt:i];
    
#line 313
    switch (c) {
      case '"':
      case '\\':
      case '/':
      (void) [((JavaLangStringBuilder *) nil_chk([out_ appendWithChar:'\\'])) appendWithChar:c];
      break;
      
#line 320
      case 0x0009:
      (void) [out_ appendWithNSString:@"\\t"];
      break;
      
#line 324
      case 0x0008:
      (void) [out_ appendWithNSString:@"\\b"];
      break;
      
#line 328
      case 0x000a:
      (void) [out_ appendWithNSString:@"\\n"];
      break;
      
#line 332
      case 0x000d:
      (void) [out_ appendWithNSString:@"\\r"];
      break;
      
#line 336
      case 0x000c:
      (void) [out_ appendWithNSString:@"\\f"];
      break;
      
#line 340
      default:
      if (c <= (int) 0x1F) {
        (void) [out_ appendWithNSString:[NSString formatWithNSString:@"\\u%04x" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [JavaLangInteger valueOfWithInt:(int) c] } count:1 type:[IOSClass classWithClass:[NSObject class]]]]];
      }
      else {
        
#line 344
        (void) [out_ appendWithChar:c];
      }
      break;
    }
  }
  
#line 350
  (void) [out_ appendWithNSString:@"\""];
}


#line 353
- (void)newline {
  
#line 354
  if (indent_ == nil) {
    return;
  }
  
#line 358
  (void) [((JavaLangStringBuilder *) nil_chk(out_)) appendWithNSString:@"\n"];
  for (int i = 0; i < [((id<JavaUtilList>) nil_chk(stack_)) size]; i++) {
    (void) [out_ appendWithNSString:indent_];
  }
}


#line 370
- (FQJSONStringer *)keyWithNSString:(NSString *)name {
  
#line 371
  if (name == nil) {
    @throw [[FQJSONException alloc] initWithNSString:@"Names must be non-null"];
  }
  [self beforeKey];
  [self stringWithNSString:name];
  return self;
}


#line 383
- (void)beforeKey {
  
#line 384
  FQJSONStringer_ScopeEnum *context = [self peek];
  if (context == FQJSONStringer_ScopeEnum_get_NONEMPTY_OBJECT()) {
    (void) [((JavaLangStringBuilder *) nil_chk(out_)) appendWithChar:','];
  }
  else
#line 387
  if (context != FQJSONStringer_ScopeEnum_get_EMPTY_OBJECT()) {
    @throw [[FQJSONException alloc] initWithNSString:@"Nesting problem"];
  }
  [self newline];
  [self replaceTopWithFQJSONStringer_ScopeEnum:FQJSONStringer_ScopeEnum_get_DANGLING_KEY()];
}

- (void)beforeValue {
  
#line 400
  if ([((id<JavaUtilList>) nil_chk(stack_)) isEmpty]) {
    return;
  }
  
#line 404
  FQJSONStringer_ScopeEnum *context = [self peek];
  if (context == FQJSONStringer_ScopeEnum_get_EMPTY_ARRAY()) {
    [self replaceTopWithFQJSONStringer_ScopeEnum:FQJSONStringer_ScopeEnum_get_NONEMPTY_ARRAY()];
    [self newline];
  }
  else
#line 408
  if (context == FQJSONStringer_ScopeEnum_get_NONEMPTY_ARRAY()) {
    (void) [((JavaLangStringBuilder *) nil_chk(out_)) appendWithChar:','];
    [self newline];
  }
  else
#line 411
  if (context == FQJSONStringer_ScopeEnum_get_DANGLING_KEY()) {
    (void) [((JavaLangStringBuilder *) nil_chk(out_)) appendWithNSString:indent_ == nil ? @":" : @": "];
    [self replaceTopWithFQJSONStringer_ScopeEnum:FQJSONStringer_ScopeEnum_get_NONEMPTY_OBJECT()];
  }
  else
#line 414
  if (context != FQJSONStringer_ScopeEnum_get_NULL_()) {
    @throw [[FQJSONException alloc] initWithNSString:@"Nesting problem"];
  }
}

- (NSString *)description {
  
#line 430
  return [((JavaLangStringBuilder *) nil_chk(out_)) sequenceLength] == 0 ? nil : [out_ description];
}

- (void)copyAllFieldsTo:(FQJSONStringer *)other {
  [super copyAllFieldsTo:other];
  other->indent_ = indent_;
  other->out_ = out_;
  other->stack_ = stack_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "init", "JSONStringer", NULL, 0x1, NULL },
    { "initWithInt:", "JSONStringer", NULL, 0x0, NULL },
    { "array", NULL, "Lcom.fq.lib.json.JSONStringer;", 0x1, "Lcom.fq.lib.json.JSONException;" },
    { "endArray", NULL, "Lcom.fq.lib.json.JSONStringer;", 0x1, "Lcom.fq.lib.json.JSONException;" },
    { "object", NULL, "Lcom.fq.lib.json.JSONStringer;", 0x1, "Lcom.fq.lib.json.JSONException;" },
    { "endObject", NULL, "Lcom.fq.lib.json.JSONStringer;", 0x1, "Lcom.fq.lib.json.JSONException;" },
    { "openWithFQJSONStringer_ScopeEnum:withNSString:", "open", "Lcom.fq.lib.json.JSONStringer;", 0x0, "Lcom.fq.lib.json.JSONException;" },
    { "closeWithFQJSONStringer_ScopeEnum:withFQJSONStringer_ScopeEnum:withNSString:", "close", "Lcom.fq.lib.json.JSONStringer;", 0x0, "Lcom.fq.lib.json.JSONException;" },
    { "peek", NULL, "Lcom.fq.lib.json.JSONStringer$Scope;", 0x2, "Lcom.fq.lib.json.JSONException;" },
    { "replaceTopWithFQJSONStringer_ScopeEnum:", "replaceTop", "V", 0x2, NULL },
    { "valueWithId:", "value", "Lcom.fq.lib.json.JSONStringer;", 0x1, "Lcom.fq.lib.json.JSONException;" },
    { "valueWithBoolean:", "value", "Lcom.fq.lib.json.JSONStringer;", 0x1, "Lcom.fq.lib.json.JSONException;" },
    { "valueWithDouble:", "value", "Lcom.fq.lib.json.JSONStringer;", 0x1, "Lcom.fq.lib.json.JSONException;" },
    { "valueWithLong:", "value", "Lcom.fq.lib.json.JSONStringer;", 0x1, "Lcom.fq.lib.json.JSONException;" },
    { "stringWithNSString:", "string", "V", 0x2, NULL },
    { "newline", NULL, "V", 0x2, NULL },
    { "keyWithNSString:", "key", "Lcom.fq.lib.json.JSONStringer;", 0x1, "Lcom.fq.lib.json.JSONException;" },
    { "beforeKey", NULL, "V", 0x2, "Lcom.fq.lib.json.JSONException;" },
    { "beforeValue", NULL, "V", 0x2, "Lcom.fq.lib.json.JSONException;" },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "out_", NULL, 0x10, "Ljava.lang.StringBuilder;", NULL,  },
    { "stack_", NULL, 0x12, "Ljava.util.List;", NULL,  },
    { "indent_", NULL, 0x12, "Ljava.lang.String;", NULL,  },
  };
  static J2ObjcClassInfo _FQJSONStringer = { "JSONStringer", "com.fq.lib.json", NULL, 0x1, 20, methods, 3, fields, 0, NULL};
  return &_FQJSONStringer;
}

@end

#line 71

BOOL FQJSONStringer_ScopeEnum_initialized = NO;

FQJSONStringer_ScopeEnum *FQJSONStringer_ScopeEnum_values[6];

@implementation FQJSONStringer_ScopeEnum

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

- (id)initWithNSString:(NSString *)__name withInt:(int)__ordinal {
  return [super initWithNSString:__name withInt:__ordinal];
}

+ (void)initialize {
  if (self == [FQJSONStringer_ScopeEnum class]) {
    FQJSONStringer_ScopeEnum_EMPTY_ARRAY = [[FQJSONStringer_ScopeEnum alloc] initWithNSString:@"EMPTY_ARRAY" withInt:0];
    FQJSONStringer_ScopeEnum_NONEMPTY_ARRAY = [[FQJSONStringer_ScopeEnum alloc] initWithNSString:@"NONEMPTY_ARRAY" withInt:1];
    FQJSONStringer_ScopeEnum_EMPTY_OBJECT = [[FQJSONStringer_ScopeEnum alloc] initWithNSString:@"EMPTY_OBJECT" withInt:2];
    FQJSONStringer_ScopeEnum_DANGLING_KEY = [[FQJSONStringer_ScopeEnum alloc] initWithNSString:@"DANGLING_KEY" withInt:3];
    FQJSONStringer_ScopeEnum_NONEMPTY_OBJECT = [[FQJSONStringer_ScopeEnum alloc] initWithNSString:@"NONEMPTY_OBJECT" withInt:4];
    FQJSONStringer_ScopeEnum_NULL_ = [[FQJSONStringer_ScopeEnum alloc] initWithNSString:@"NULL_" withInt:5];
    FQJSONStringer_ScopeEnum_initialized = YES;
  }
}

+ (IOSObjectArray *)values {
  return [IOSObjectArray arrayWithObjects:FQJSONStringer_ScopeEnum_values count:6 type:[IOSClass classWithClass:[FQJSONStringer_ScopeEnum class]]];
}

+ (FQJSONStringer_ScopeEnum *)valueOfWithNSString:(NSString *)name {
  for (int i = 0; i < 6; i++) {
    FQJSONStringer_ScopeEnum *e = FQJSONStringer_ScopeEnum_values[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:name];
  return nil;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "init", NULL, NULL, 0x0, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "EMPTY_ARRAY", "EMPTY_ARRAY", 0x4019, "Lcom.fq.lib.json.JSONStringer$Scope;", &FQJSONStringer_ScopeEnum_EMPTY_ARRAY,  },
    { "NONEMPTY_ARRAY", "NONEMPTY_ARRAY", 0x4019, "Lcom.fq.lib.json.JSONStringer$Scope;", &FQJSONStringer_ScopeEnum_NONEMPTY_ARRAY,  },
    { "EMPTY_OBJECT", "EMPTY_OBJECT", 0x4019, "Lcom.fq.lib.json.JSONStringer$Scope;", &FQJSONStringer_ScopeEnum_EMPTY_OBJECT,  },
    { "DANGLING_KEY", "DANGLING_KEY", 0x4019, "Lcom.fq.lib.json.JSONStringer$Scope;", &FQJSONStringer_ScopeEnum_DANGLING_KEY,  },
    { "NONEMPTY_OBJECT", "NONEMPTY_OBJECT", 0x4019, "Lcom.fq.lib.json.JSONStringer$Scope;", &FQJSONStringer_ScopeEnum_NONEMPTY_OBJECT,  },
    { "NULL_", NULL, 0x4019, "Lcom.fq.lib.json.JSONStringer$Scope;", &FQJSONStringer_ScopeEnum_NULL_,  },
  };
  static const char *superclass_type_args[] = {"Lcom.fq.lib.json.JSONStringer$Scope;"};
  static J2ObjcClassInfo _FQJSONStringer_ScopeEnum = { "Scope", "com.fq.lib.json", "JSONStringer", 0x4018, 1, methods, 6, fields, 1, superclass_type_args};
  return &_FQJSONStringer_ScopeEnum;
}

@end
