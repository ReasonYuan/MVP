//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/liaomin/Documents/workspace/Android/DocPlusLogic/src/com/fq/halcyon/logic2/GetRecordListLogic.java
//
//  Created by liaomin on 15-5-4.
//

#line 1 "/Users/liaomin/Documents/workspace/Android/DocPlusLogic/src/com/fq/halcyon/logic2/GetRecordListLogic.java"

#include "ApiSystem.h"
#include "Constants.h"
#include "FQHttpParams.h"
#include "FileHelper.h"
#include "FileSystem.h"
#include "GetRecordListLogic.h"
#include "HttpRequestPotocol.h"
#include "IOSPrimitiveArray.h"
#include "JSONArray.h"
#include "JSONException.h"
#include "JSONObject.h"
#include "JsonHelper.h"
#include "Platform.h"
#include "Record.h"
#include "UriConstants.h"
#include "User.h"
#include "java/io/UnsupportedEncodingException.h"
#include "java/lang/Integer.h"
#include "java/lang/Throwable.h"
#include "java/util/ArrayList.h"
#include "java/util/HashMap.h"


#line 27
@implementation ComFqHalcyonLogic2GetRecordListLogic


#line 32
- (id)initWithComFqHalcyonLogic2GetRecordListLogic_GetRecordListCallBack:(id<ComFqHalcyonLogic2GetRecordListLogic_GetRecordListCallBack>)onCallBack {
  if (self = [super init]) {
    
#line 33
    self->onCallBack_ = onCallBack;
  }
  return self;
}


#line 44
- (void)getRecordListWithInt:(int)patientId
                     withInt:(int)page
                     withInt:(int)pageSize {
  
#line 45
  JavaUtilHashMap *map = [[JavaUtilHashMap alloc] init];
  (void) [map putWithId:@"user_id" withId:[JavaLangInteger valueOfWithInt:[((ComFqHalcyonEntityUser *) nil_chk([ComFqLibToolsConstants getUser])) getUserId]]];
  (void) [map putWithId:@"patient_id" withId:[JavaLangInteger valueOfWithInt:patientId]];
  (void) [map putWithId:@"page" withId:[JavaLangInteger valueOfWithInt:page]];
  (void) [map putWithId:@"page_size" withId:[JavaLangInteger valueOfWithInt:pageSize]];
  FQJSONObject *json = [ComFqLibJsonHelper createJsonWithJavaUtilMap:map];
  NSString *uri = [NSString stringWithFormat:@"%@/record/find_record.do", ComFqLibToolsUriConstants_Conn_get_URL_PUB_()];
  
#line 53
  ComFqHalcyonLogic2GetRecordListLogic_GetRecordListHandle *mHandle = [[ComFqHalcyonLogic2GetRecordListLogic_GetRecordListHandle alloc] initWithComFqHalcyonLogic2GetRecordListLogic:self withInt:patientId withInt:page];
  if (ComFqLibPlatformPlatform_get_isNetWorkConnect_()) {
    (void) [((ComFqHalcyonApiApiSystem *) nil_chk([ComFqHalcyonApiApiSystem getInstance])) requireWithNSString:uri withComFqHttpAsyncFQHttpParams:[[ComFqHttpAsyncFQHttpParams alloc] initWithFQJSONObject:json] withComFqHalcyonApiApiSystem_API_TYPEEnum:ComFqHalcyonApiApiSystem_API_TYPEEnum_get_DIRECT() withHalcyonHttpResponseHandle:mHandle];
  }
  else {
    
#line 57
    NSString *cache = [ComFqLibFileHelper readStringWithNSString:[NSString stringWithFormat:@"%@%drecords.list", [((ComFqHalcyonExtendFilesystemFileSystem *) nil_chk([ComFqHalcyonExtendFilesystemFileSystem getInstance])) getUserCachePath], patientId] withBoolean:YES];
    if (cache != nil && ![cache isEqual:@""]) {
      @try {
        [mHandle handleCacheWithInt:0 withNSString:cache withInt:2 withId:[[FQJSONArray alloc] initWithNSString:cache] withBoolean:YES];
      }
      @catch (
#line 61
      FQJSONException *e) {
        [((FQJSONException *) nil_chk(e)) printStackTrace];
      }
    }
    else {
      
#line 65
      (void) [((ComFqHalcyonApiApiSystem *) nil_chk([ComFqHalcyonApiApiSystem getInstance])) requireWithNSString:uri withComFqHttpAsyncFQHttpParams:[[ComFqHttpAsyncFQHttpParams alloc] initWithFQJSONObject:json] withComFqHalcyonApiApiSystem_API_TYPEEnum:ComFqHalcyonApiApiSystem_API_TYPEEnum_get_DIRECT() withHalcyonHttpResponseHandle:mHandle];
    }
  }
}


#line 76
- (void)getRecordListWithInt:(int)patientId {
  
#line 77
  JavaUtilHashMap *map = [[JavaUtilHashMap alloc] init];
  (void) [map putWithId:@"user_id" withId:[JavaLangInteger valueOfWithInt:[((ComFqHalcyonEntityUser *) nil_chk([ComFqLibToolsConstants getUser])) getUserId]]];
  (void) [map putWithId:@"patient_id" withId:[JavaLangInteger valueOfWithInt:patientId]];
  FQJSONObject *json = [ComFqLibJsonHelper createJsonWithJavaUtilMap:map];
  NSString *uri = [NSString stringWithFormat:@"%@/record/find_record.do", ComFqLibToolsUriConstants_Conn_get_URL_PUB_()];
  
#line 83
  (void) [((ComFqHalcyonApiApiSystem *) nil_chk([ComFqHalcyonApiApiSystem getInstance])) requireWithNSString:uri withComFqHttpAsyncFQHttpParams:[[ComFqHttpAsyncFQHttpParams alloc] initWithFQJSONObject:json] withComFqHalcyonApiApiSystem_API_TYPEEnum:ComFqHalcyonApiApiSystem_API_TYPEEnum_get_DIRECT() withHalcyonHttpResponseHandle:[[ComFqHalcyonLogic2GetRecordListLogic_GetRecordListHandle alloc] initWithComFqHalcyonLogic2GetRecordListLogic:self withInt:patientId withInt:1]];
}


#line 92
- (void)getRecordListWithInt:(int)patientId
                withNSString:(NSString *)recordName {
  
#line 93
  JavaUtilHashMap *map = [[JavaUtilHashMap alloc] init];
  NSString *name = @"";
  @try {
    name = [NSString stringWithBytes:[((NSString *) nil_chk(recordName)) getBytesWithCharsetName:@"UTF-8"] charsetName:@"UTF-8"];
  }
  @catch (
#line 97
  JavaIoUnsupportedEncodingException *e) {
    [((JavaIoUnsupportedEncodingException *) nil_chk(e)) printStackTrace];
  }
  (void) [map putWithId:@"user_id" withId:[JavaLangInteger valueOfWithInt:[((ComFqHalcyonEntityUser *) nil_chk([ComFqLibToolsConstants getUser])) getUserId]]];
  (void) [map putWithId:@"patient_id" withId:[JavaLangInteger valueOfWithInt:patientId]];
  (void) [map putWithId:@"record_name" withId:name];
  FQJSONObject *json = [ComFqLibJsonHelper createJsonWithJavaUtilMap:map];
  NSString *uri = [NSString stringWithFormat:@"%@/record/find_record.do", ComFqLibToolsUriConstants_Conn_get_URL_PUB_()];
  
#line 106
  (void) [((ComFqHalcyonApiApiSystem *) nil_chk([ComFqHalcyonApiApiSystem getInstance])) requireWithNSString:uri withComFqHttpAsyncFQHttpParams:[[ComFqHttpAsyncFQHttpParams alloc] initWithFQJSONObject:json] withComFqHalcyonApiApiSystem_API_TYPEEnum:ComFqHalcyonApiApiSystem_API_TYPEEnum_get_DIRECT() withHalcyonHttpResponseHandle:[[ComFqHalcyonLogic2GetRecordListLogic_GetRecordListHandle alloc] initWithComFqHalcyonLogic2GetRecordListLogic:self withInt:patientId withInt:1]];
}

- (void)copyAllFieldsTo:(ComFqHalcyonLogic2GetRecordListLogic *)other {
  [super copyAllFieldsTo:other];
  other->mRecordList_ = mRecordList_;
  other->onCallBack_ = onCallBack_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "initWithComFqHalcyonLogic2GetRecordListLogic_GetRecordListCallBack:", "GetRecordListLogic", NULL, 0x1, NULL },
    { "getRecordListWithInt:withInt:withInt:", "getRecordList", "V", 0x1, NULL },
    { "getRecordListWithInt:", "getRecordList", "V", 0x1, NULL },
    { "getRecordListWithInt:withNSString:", "getRecordList", "V", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "mRecordList_", NULL, 0x2, "Ljava.util.ArrayList;", NULL,  },
    { "onCallBack_", NULL, 0x2, "Lcom.fq.halcyon.logic2.GetRecordListLogic$GetRecordListCallBack;", NULL,  },
  };
  static J2ObjcClassInfo _ComFqHalcyonLogic2GetRecordListLogic = { "GetRecordListLogic", "com.fq.halcyon.logic2", NULL, 0x1, 4, methods, 2, fields, 0, NULL};
  return &_ComFqHalcyonLogic2GetRecordListLogic;
}

@end

@interface ComFqHalcyonLogic2GetRecordListLogic_GetRecordListCallBack : NSObject
@end

@implementation ComFqHalcyonLogic2GetRecordListLogic_GetRecordListCallBack

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "onGetRecordListErrorWithInt:withNSString:", "onGetRecordListError", "V", 0x401, NULL },
    { "onGetRecordListWithJavaUtilArrayList:", "onGetRecordList", "V", 0x401, NULL },
  };
  static J2ObjcClassInfo _ComFqHalcyonLogic2GetRecordListLogic_GetRecordListCallBack = { "GetRecordListCallBack", "com.fq.halcyon.logic2", "GetRecordListLogic", 0x201, 2, methods, 0, NULL, 0, NULL};
  return &_ComFqHalcyonLogic2GetRecordListLogic_GetRecordListCallBack;
}

@end


#line 115
@implementation ComFqHalcyonLogic2GetRecordListLogic_GetRecordListHandle


#line 121
- (id)initWithComFqHalcyonLogic2GetRecordListLogic:(ComFqHalcyonLogic2GetRecordListLogic *)outer$
                                           withInt:(int)patientId
                                           withInt:(int)page {
  this$0_ = outer$;
  if (self = [super init]) {
    
#line 122
    self->mPatientId_ = patientId;
    
#line 123
    self->mPage_ = page;
  }
  return self;
}


#line 127
- (void)onErrorWithInt:(int)code
 withJavaLangThrowable:(JavaLangThrowable *)e {
  
#line 128
  [((id<ComFqHalcyonLogic2GetRecordListLogic_GetRecordListCallBack>) nil_chk(this$0_->onCallBack_)) onGetRecordListErrorWithInt:code withNSString:[((JavaLangThrowable *) nil_chk(e)) getMessage]];
}


#line 131
- (void)handleCacheWithInt:(int)responseCode
              withNSString:(NSString *)msg
                   withInt:(int)type
                    withId:(id)results
               withBoolean:(BOOL)fromCache {
  
#line 132
  if (responseCode == 0 && type == 2) {
    this$0_->mRecordList_ = [[JavaUtilArrayList alloc] init];
    FQJSONArray *jsonarr = (FQJSONArray *) check_class_cast(results, [FQJSONArray class]);
    int count = [((FQJSONArray *) nil_chk(jsonarr)) length];
    for (int i = 0; i < count; i++) {
      FQJSONObject *jsonObj = [jsonarr optJSONObjectWithInt:i];
      ComFqHalcyonEntityRecord *record = [[ComFqHalcyonEntityRecord alloc] init];
      [record setAtttributeByjsonWithFQJSONObject:jsonObj];
      [this$0_->mRecordList_ addWithId:record];
    }
    [((id<ComFqHalcyonLogic2GetRecordListLogic_GetRecordListCallBack>) nil_chk(this$0_->onCallBack_)) onGetRecordListWithJavaUtilArrayList:this$0_->mRecordList_];
    NSString *filePath = [NSString stringWithFormat:@"%@%drecords.list", [((ComFqHalcyonExtendFilesystemFileSystem *) nil_chk([ComFqHalcyonExtendFilesystemFileSystem getInstance])) getUserCachePath], mPatientId_];
    if (!fromCache) {
      if (mPage_ != 1) {
        NSString *cache = [ComFqLibFileHelper readStringWithNSString:filePath withBoolean:YES];
        FQJSONArray *array = nil;
        if (cache != nil && ![cache isEqual:@""]) {
          @try {
            array = [[FQJSONArray alloc] initWithNSString:cache];
          }
          @catch (
#line 151
          FQJSONException *e) {
            [((FQJSONException *) nil_chk(e)) printStackTrace];
          }
        }
        else {
          
#line 155
          array = [[FQJSONArray alloc] init];
        }
        for (int i = 0; i < count; i++) {
          (void) [((FQJSONArray *) nil_chk(array)) putWithId:[jsonarr optJSONObjectWithInt:i]];
        }
        [ComFqLibFileHelper saveFileWithNSString:[((FQJSONArray *) nil_chk(array)) description] withNSString:filePath withBoolean:YES];
      }
      else {
        
#line 162
        [ComFqLibFileHelper saveFileWithNSString:[nil_chk(results) description] withNSString:filePath withBoolean:YES];
      }
    }
  }
  else {
    
#line 166
    [((id<ComFqHalcyonLogic2GetRecordListLogic_GetRecordListCallBack>) nil_chk(this$0_->onCallBack_)) onGetRecordListErrorWithInt:responseCode withNSString:msg];
  }
}


#line 172
- (void)handleWithInt:(int)responseCode
         withNSString:(NSString *)msg
              withInt:(int)type
               withId:(id)results {
  
#line 173
  [self handleCacheWithInt:responseCode withNSString:msg withInt:type withId:results withBoolean:NO];
}

- (void)copyAllFieldsTo:(ComFqHalcyonLogic2GetRecordListLogic_GetRecordListHandle *)other {
  [super copyAllFieldsTo:other];
  other->mPage_ = mPage_;
  other->mPatientId_ = mPatientId_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "initWithComFqHalcyonLogic2GetRecordListLogic:withInt:withInt:", "GetRecordListHandle", NULL, 0x1, NULL },
    { "onErrorWithInt:withJavaLangThrowable:", "onError", "V", 0x1, NULL },
    { "handleCacheWithInt:withNSString:withInt:withId:withBoolean:", "handleCache", "V", 0x1, NULL },
    { "handleWithInt:withNSString:withInt:withId:", "handle", "V", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lcom.fq.halcyon.logic2.GetRecordListLogic;", NULL,  },
    { "mPatientId_", NULL, 0x2, "I", NULL,  },
    { "mPage_", NULL, 0x2, "I", NULL,  },
  };
  static J2ObjcClassInfo _ComFqHalcyonLogic2GetRecordListLogic_GetRecordListHandle = { "GetRecordListHandle", "com.fq.halcyon.logic2", "GetRecordListLogic", 0x0, 4, methods, 3, fields, 0, NULL};
  return &_ComFqHalcyonLogic2GetRecordListLogic_GetRecordListHandle;
}

@end
