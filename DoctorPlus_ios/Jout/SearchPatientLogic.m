//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/liaomin/Documents/workspace/Android/DocPlusLogic/src/com/fq/halcyon/logic2/SearchPatientLogic.java
//
//  Created by liaomin on 15-5-4.
//

#line 1 "/Users/liaomin/Documents/workspace/Android/DocPlusLogic/src/com/fq/halcyon/logic2/SearchPatientLogic.java"

#include "ApiSystem.h"
#include "Constants.h"
#include "FQHttpParams.h"
#include "FileHelper.h"
#include "FileSystem.h"
#include "HttpRequestPotocol.h"
#include "JSONArray.h"
#include "JSONException.h"
#include "JSONObject.h"
#include "JsonHelper.h"
#include "Patient.h"
#include "Platform.h"
#include "SearchPatientLogic.h"
#include "UriConstants.h"
#include "User.h"
#include "java/lang/Integer.h"
#include "java/lang/Throwable.h"
#include "java/util/ArrayList.h"
#include "java/util/HashMap.h"


#line 25
@implementation ComFqHalcyonLogic2SearchPatientLogic


#line 37
- (id)initWithComFqHalcyonLogic2SearchPatientLogic_SearchMedicalCallBack:(id<ComFqHalcyonLogic2SearchPatientLogic_SearchMedicalCallBack>)onCallBack {
  if (self = [super init]) {
    
#line 38
    self->onCallBack_ = onCallBack;
    
#line 39
    medicalList_ = [[JavaUtilArrayList alloc] init];
  }
  return self;
}


#line 48
- (void)searchMedicalWithNSString:(NSString *)patientKey
                          withInt:(int)page
                          withInt:(int)pageSize {
  JavaUtilHashMap *map = [[JavaUtilHashMap alloc] init];
  (void) [map putWithId:@"user_id" withId:[JavaLangInteger valueOfWithInt:[((ComFqHalcyonEntityUser *) nil_chk([ComFqLibToolsConstants getUser])) getUserId]]];
  (void) [map putWithId:@"patient_name" withId:patientKey];
  (void) [map putWithId:@"page" withId:[JavaLangInteger valueOfWithInt:page]];
  (void) [map putWithId:@"page_size" withId:[JavaLangInteger valueOfWithInt:pageSize]];
  FQJSONObject *json = [ComFqLibJsonHelper createJsonWithJavaUtilMap:map];
  NSString *uri = [NSString stringWithFormat:@"%@/patient/search.do", ComFqLibToolsUriConstants_Conn_get_URL_PUB_()];
  ComFqHalcyonLogic2SearchPatientLogic_SearchMedicalHandle *mHandle = [[ComFqHalcyonLogic2SearchPatientLogic_SearchMedicalHandle alloc] initWithComFqHalcyonLogic2SearchPatientLogic:self withInt:page];
  if (ComFqLibPlatformPlatform_get_isNetWorkConnect_()) {
    (void) [((ComFqHalcyonApiApiSystem *) nil_chk([ComFqHalcyonApiApiSystem getInstance])) requireWithNSString:uri withComFqHttpAsyncFQHttpParams:[[ComFqHttpAsyncFQHttpParams alloc] initWithFQJSONObject:json] withComFqHalcyonApiApiSystem_API_TYPEEnum:ComFqHalcyonApiApiSystem_API_TYPEEnum_get_DIRECT() withHalcyonHttpResponseHandle:mHandle];
  }
  else {
    
#line 60
    NSString *cache = [ComFqLibFileHelper readStringWithNSString:[NSString stringWithFormat:@"%@search.list", [((ComFqHalcyonExtendFilesystemFileSystem *) nil_chk([ComFqHalcyonExtendFilesystemFileSystem getInstance])) getUserCachePath]] withBoolean:YES];
    if (cache != nil && ![cache isEqual:@""]) {
      @try {
        [mHandle handleCacheWithInt:0 withNSString:cache withInt:2 withId:[[FQJSONArray alloc] initWithNSString:cache] withBoolean:YES];
      }
      @catch (
#line 64
      FQJSONException *e) {
        [((FQJSONException *) nil_chk(e)) printStackTrace];
      }
    }
    else {
      
#line 68
      (void) [((ComFqHalcyonApiApiSystem *) nil_chk([ComFqHalcyonApiApiSystem getInstance])) requireWithNSString:uri withComFqHttpAsyncFQHttpParams:[[ComFqHttpAsyncFQHttpParams alloc] initWithFQJSONObject:json] withComFqHalcyonApiApiSystem_API_TYPEEnum:ComFqHalcyonApiApiSystem_API_TYPEEnum_get_DIRECT() withHalcyonHttpResponseHandle:mHandle];
    }
  }
}


#line 73
- (void)searchMedicalWithNSString:(NSString *)patientKey {
  
#line 74
  JavaUtilHashMap *map = [[JavaUtilHashMap alloc] init];
  (void) [map putWithId:@"user_id" withId:[JavaLangInteger valueOfWithInt:[((ComFqHalcyonEntityUser *) nil_chk([ComFqLibToolsConstants getUser])) getUserId]]];
  (void) [map putWithId:@"patient_name" withId:patientKey];
  FQJSONObject *json = [ComFqLibJsonHelper createJsonWithJavaUtilMap:map];
  NSString *uri = [NSString stringWithFormat:@"%@/patient/search.do", ComFqLibToolsUriConstants_Conn_get_URL_PUB_()];
  ComFqHalcyonLogic2SearchPatientLogic_SearchMedicalHandle *mHandle = [[ComFqHalcyonLogic2SearchPatientLogic_SearchMedicalHandle alloc] initWithComFqHalcyonLogic2SearchPatientLogic:self withInt:1];
  (void) [((ComFqHalcyonApiApiSystem *) nil_chk([ComFqHalcyonApiApiSystem getInstance])) requireWithNSString:uri withComFqHttpAsyncFQHttpParams:[[ComFqHttpAsyncFQHttpParams alloc] initWithFQJSONObject:json] withComFqHalcyonApiApiSystem_API_TYPEEnum:ComFqHalcyonApiApiSystem_API_TYPEEnum_get_DIRECT() withHalcyonHttpResponseHandle:mHandle];
}

- (void)copyAllFieldsTo:(ComFqHalcyonLogic2SearchPatientLogic *)other {
  [super copyAllFieldsTo:other];
  other->medicalList_ = medicalList_;
  other->onCallBack_ = onCallBack_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "initWithComFqHalcyonLogic2SearchPatientLogic_SearchMedicalCallBack:", "SearchPatientLogic", NULL, 0x1, NULL },
    { "searchMedicalWithNSString:withInt:withInt:", "searchMedical", "V", 0x1, NULL },
    { "searchMedicalWithNSString:", "searchMedical", "V", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "medicalList_", NULL, 0x2, "Ljava.util.ArrayList;", NULL,  },
    { "onCallBack_", NULL, 0x1, "Lcom.fq.halcyon.logic2.SearchPatientLogic$SearchMedicalCallBack;", NULL,  },
  };
  static J2ObjcClassInfo _ComFqHalcyonLogic2SearchPatientLogic = { "SearchPatientLogic", "com.fq.halcyon.logic2", NULL, 0x1, 3, methods, 2, fields, 0, NULL};
  return &_ComFqHalcyonLogic2SearchPatientLogic;
}

@end

@interface ComFqHalcyonLogic2SearchPatientLogic_SearchMedicalCallBack : NSObject
@end

@implementation ComFqHalcyonLogic2SearchPatientLogic_SearchMedicalCallBack

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "onSearchMedicalErrorWithInt:withNSString:", "onSearchMedicalError", "V", 0x401, NULL },
    { "onSearchMedicalResultWithJavaUtilArrayList:", "onSearchMedicalResult", "V", 0x401, NULL },
  };
  static J2ObjcClassInfo _ComFqHalcyonLogic2SearchPatientLogic_SearchMedicalCallBack = { "SearchMedicalCallBack", "com.fq.halcyon.logic2", "SearchPatientLogic", 0x201, 2, methods, 0, NULL, 0, NULL};
  return &_ComFqHalcyonLogic2SearchPatientLogic_SearchMedicalCallBack;
}

@end


#line 83
@implementation ComFqHalcyonLogic2SearchPatientLogic_SearchMedicalHandle


#line 87
- (id)initWithComFqHalcyonLogic2SearchPatientLogic:(ComFqHalcyonLogic2SearchPatientLogic *)outer$
                                           withInt:(int)page {
  this$0_ = outer$;
  if (self = [super init]) {
    
#line 88
    self->mPage_ = page;
  }
  return self;
}


#line 92
- (void)onErrorWithInt:(int)code
 withJavaLangThrowable:(JavaLangThrowable *)e {
  
#line 93
  [((id<ComFqHalcyonLogic2SearchPatientLogic_SearchMedicalCallBack>) nil_chk(this$0_->onCallBack_)) onSearchMedicalErrorWithInt:code withNSString:[((JavaLangThrowable *) nil_chk(e)) getMessage]];
}


#line 96
- (void)handleCacheWithInt:(int)responseCode
              withNSString:(NSString *)msg
                   withInt:(int)type
                    withId:(id)results
               withBoolean:(BOOL)fromCache {
  
#line 97
  if (responseCode == 0 && type == 2) {
    
#line 99
    FQJSONArray *jsonArr = (FQJSONArray *) check_class_cast(results, [FQJSONArray class]);
    int count = [((FQJSONArray *) nil_chk(jsonArr)) length];
    for (int i = 0; i < count; i++) {
      FQJSONObject *obj = [jsonArr optJSONObjectWithInt:i];
      ComFqHalcyonEntityPatient *medical = [[ComFqHalcyonEntityPatient alloc] init];
      [medical setAtttributeByjsonWithFQJSONObject:obj];
      [((JavaUtilArrayList *) nil_chk(this$0_->medicalList_)) addWithId:medical];
    }
    [((id<ComFqHalcyonLogic2SearchPatientLogic_SearchMedicalCallBack>) nil_chk(this$0_->onCallBack_)) onSearchMedicalResultWithJavaUtilArrayList:this$0_->medicalList_];
    NSString *filePath = [NSString stringWithFormat:@"%@search.list", [((ComFqHalcyonExtendFilesystemFileSystem *) nil_chk([ComFqHalcyonExtendFilesystemFileSystem getInstance])) getUserCachePath]];
    if (!fromCache) {
      if (mPage_ != 1) {
        NSString *cache = [ComFqLibFileHelper readStringWithNSString:filePath withBoolean:YES];
        FQJSONArray *array = nil;
        if (cache != nil && ![cache isEqual:@""]) {
          @try {
            array = [[FQJSONArray alloc] initWithNSString:cache];
          }
          @catch (
#line 116
          FQJSONException *e) {
            [((FQJSONException *) nil_chk(e)) printStackTrace];
          }
        }
        else {
          
#line 120
          array = [[FQJSONArray alloc] init];
        }
        for (int i = 0; i < count; i++) {
          (void) [((FQJSONArray *) nil_chk(array)) putWithId:[jsonArr optJSONObjectWithInt:i]];
        }
        [ComFqLibFileHelper saveFileWithNSString:[((FQJSONArray *) nil_chk(array)) description] withNSString:filePath withBoolean:YES];
      }
      else {
        
#line 127
        [ComFqLibFileHelper saveFileWithNSString:[nil_chk(results) description] withNSString:filePath withBoolean:YES];
      }
    }
  }
  else {
    
#line 131
    [((id<ComFqHalcyonLogic2SearchPatientLogic_SearchMedicalCallBack>) nil_chk(this$0_->onCallBack_)) onSearchMedicalErrorWithInt:responseCode withNSString:msg];
  }
}


#line 136
- (void)handleWithInt:(int)responseCode
         withNSString:(NSString *)msg
              withInt:(int)type
               withId:(id)results {
  
#line 137
  [self handleCacheWithInt:responseCode withNSString:msg withInt:type withId:results withBoolean:NO];
}

- (void)copyAllFieldsTo:(ComFqHalcyonLogic2SearchPatientLogic_SearchMedicalHandle *)other {
  [super copyAllFieldsTo:other];
  other->mPage_ = mPage_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "initWithComFqHalcyonLogic2SearchPatientLogic:withInt:", "SearchMedicalHandle", NULL, 0x1, NULL },
    { "onErrorWithInt:withJavaLangThrowable:", "onError", "V", 0x1, NULL },
    { "handleCacheWithInt:withNSString:withInt:withId:withBoolean:", "handleCache", "V", 0x1, NULL },
    { "handleWithInt:withNSString:withInt:withId:", "handle", "V", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lcom.fq.halcyon.logic2.SearchPatientLogic;", NULL,  },
    { "mPage_", NULL, 0x2, "I", NULL,  },
  };
  static J2ObjcClassInfo _ComFqHalcyonLogic2SearchPatientLogic_SearchMedicalHandle = { "SearchMedicalHandle", "com.fq.halcyon.logic2", "SearchPatientLogic", 0x0, 4, methods, 2, fields, 0, NULL};
  return &_ComFqHalcyonLogic2SearchPatientLogic_SearchMedicalHandle;
}

@end
