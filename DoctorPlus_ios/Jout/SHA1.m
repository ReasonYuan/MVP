//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/liaomin/Documents/workspace/Android/DocPlusLogic/src/com/fq/lib/tools/SHA1.java
//
//  Created by liaomin on 15-5-4.
//

#line 1 "/Users/liaomin/Documents/workspace/Android/DocPlusLogic/src/com/fq/lib/tools/SHA1.java"

#include "IOSPrimitiveArray.h"
#include "SHA1.h"
#include "java/lang/System.h"

BOOL ComFqLibToolsSHA1_initialized = NO;


#line 2
@implementation ComFqLibToolsSHA1

IOSIntArray * ComFqLibToolsSHA1_abcde_;
IOSIntArray * ComFqLibToolsSHA1_digestInt_;
IOSIntArray * ComFqLibToolsSHA1_tmpData_;


#line 11
+ (int)process_input_bytesWithByteArray:(IOSByteArray *)bytedata {
  
#line 13
  [JavaLangSystem arraycopyWithId:ComFqLibToolsSHA1_abcde_ withInt:0 withId:ComFqLibToolsSHA1_digestInt_ withInt:0 withInt:(int) [((IOSIntArray *) nil_chk(ComFqLibToolsSHA1_abcde_)) count]];
  
#line 15
  IOSByteArray *newbyte = [ComFqLibToolsSHA1 byteArrayFormatDataWithByteArray:bytedata];
  
#line 17
  int MCount = (int) [((IOSByteArray *) nil_chk(newbyte)) count] / 64;
  
#line 19
  for (int pos = 0; pos < MCount; pos++) {
    
#line 21
    for (int j = 0; j < 16; j++) {
      (*IOSIntArray_GetRef(nil_chk(ComFqLibToolsSHA1_tmpData_), j)) = [ComFqLibToolsSHA1 byteArrayToIntWithByteArray:newbyte withInt:(pos * 64) + (j * 4)];
    }
    
#line 25
    [ComFqLibToolsSHA1 encrypt];
  }
  return 20;
}


#line 30
+ (IOSByteArray *)byteArrayFormatDataWithByteArray:(IOSByteArray *)bytedata {
  
#line 32
  int zeros = 0;
  
#line 34
  int size = 0;
  
#line 36
  int n = (int) [((IOSByteArray *) nil_chk(bytedata)) count];
  
#line 38
  int m = n % 64;
  
#line 40
  if (m < 56) {
    zeros = 55 - m;
    size = n - m + 64;
  }
  else
#line 43
  if (m == 56) {
    zeros = 63;
    size = n + 8 + 64;
  }
  else {
    
#line 47
    zeros = 63 - m + 56;
    size = (n + 64) - m + 64;
  }
  
#line 51
  IOSByteArray *newbyte = [IOSByteArray arrayWithLength:size];
  
#line 53
  [JavaLangSystem arraycopyWithId:bytedata withInt:0 withId:newbyte withInt:0 withInt:n];
  
#line 55
  int l = n;
  
#line 57
  (*IOSByteArray_GetRef(newbyte, l++)) = (char) (int) 0x80;
  
#line 59
  for (int i = 0; i < zeros; i++) {
    (*IOSByteArray_GetRef(newbyte, l++)) = (char) (int) 0x00;
  }
  
#line 63
  long long int N = (long long int) n * 8;
  char h8 = (char) (N & (int) 0xFF);
  char h7 = (char) ((N >> 8) & (int) 0xFF);
  char h6 = (char) ((N >> 16) & (int) 0xFF);
  char h5 = (char) ((N >> 24) & (int) 0xFF);
  char h4 = (char) ((N >> 32) & (int) 0xFF);
  char h3 = (char) ((N >> 40) & (int) 0xFF);
  char h2 = (char) ((N >> 48) & (int) 0xFF);
  char h1 = (char) (N >> 56);
  (*IOSByteArray_GetRef(newbyte, l++)) = h1;
  (*IOSByteArray_GetRef(newbyte, l++)) = h2;
  (*IOSByteArray_GetRef(newbyte, l++)) = h3;
  (*IOSByteArray_GetRef(newbyte, l++)) = h4;
  (*IOSByteArray_GetRef(newbyte, l++)) = h5;
  (*IOSByteArray_GetRef(newbyte, l++)) = h6;
  (*IOSByteArray_GetRef(newbyte, l++)) = h7;
  (*IOSByteArray_GetRef(newbyte, l++)) = h8;
  return newbyte;
}


#line 82
+ (int)f1WithInt:(int)x
         withInt:(int)y
         withInt:(int)z {
  
#line 83
  return (x & y) | (~x & z);
}


#line 85
+ (int)f2WithInt:(int)x
         withInt:(int)y
         withInt:(int)z {
  
#line 86
  return x ^ y ^ z;
}


#line 88
+ (int)f3WithInt:(int)x
         withInt:(int)y
         withInt:(int)z {
  
#line 89
  return (x & y) | (x & z) | (y & z);
}


#line 91
+ (int)f4WithInt:(int)x
         withInt:(int)y {
  
#line 92
  return (x << y) | ((int) (((unsigned int) x) >> (32 - y)));
}


#line 95
+ (void)encrypt {
  
#line 96
  for (int i = 16; i <= 79; i++) {
    (*IOSIntArray_GetRef(nil_chk(ComFqLibToolsSHA1_tmpData_), i)) = [ComFqLibToolsSHA1 f4WithInt:IOSIntArray_Get(ComFqLibToolsSHA1_tmpData_, i - 3) ^ IOSIntArray_Get(ComFqLibToolsSHA1_tmpData_, i - 8) ^ IOSIntArray_Get(ComFqLibToolsSHA1_tmpData_, i - 14) ^ IOSIntArray_Get(
#line 98
    ComFqLibToolsSHA1_tmpData_, i - 16) withInt:1];
  }
  IOSIntArray *tmpabcde = [IOSIntArray arrayWithLength:5];
  for (int i1 = 0; i1 < (int) [tmpabcde count]; i1++) {
    (*IOSIntArray_GetRef(tmpabcde, i1)) = IOSIntArray_Get(nil_chk(ComFqLibToolsSHA1_digestInt_), i1);
  }
  for (int j = 0; j <= 19; j++) {
    int tmp = [ComFqLibToolsSHA1 f4WithInt:IOSIntArray_Get(tmpabcde, 0) withInt:5] +
#line 106
    [ComFqLibToolsSHA1 f1WithInt:IOSIntArray_Get(tmpabcde, 1) withInt:IOSIntArray_Get(tmpabcde, 2) withInt:IOSIntArray_Get(tmpabcde, 3)] + IOSIntArray_Get(tmpabcde, 4) + IOSIntArray_Get(nil_chk(
#line 107
    ComFqLibToolsSHA1_tmpData_), j) + (int) 0x5a827999;
    (*IOSIntArray_GetRef(tmpabcde, 4)) = IOSIntArray_Get(tmpabcde, 3);
    (*IOSIntArray_GetRef(tmpabcde, 3)) = IOSIntArray_Get(tmpabcde, 2);
    (*IOSIntArray_GetRef(tmpabcde, 2)) = [ComFqLibToolsSHA1 f4WithInt:IOSIntArray_Get(tmpabcde, 1) withInt:30];
    (*IOSIntArray_GetRef(tmpabcde, 1)) = IOSIntArray_Get(tmpabcde, 0);
    (*IOSIntArray_GetRef(tmpabcde, 0)) = tmp;
  }
  for (int k = 20; k <= 39; k++) {
    int tmp = [ComFqLibToolsSHA1 f4WithInt:IOSIntArray_Get(tmpabcde, 0) withInt:5] +
#line 116
    [ComFqLibToolsSHA1 f2WithInt:IOSIntArray_Get(tmpabcde, 1) withInt:IOSIntArray_Get(tmpabcde, 2) withInt:IOSIntArray_Get(tmpabcde, 3)] + IOSIntArray_Get(tmpabcde, 4) + IOSIntArray_Get(nil_chk(
#line 117
    ComFqLibToolsSHA1_tmpData_), k) + (int) 0x6ed9eba1;
    (*IOSIntArray_GetRef(tmpabcde, 4)) = IOSIntArray_Get(tmpabcde, 3);
    (*IOSIntArray_GetRef(tmpabcde, 3)) = IOSIntArray_Get(tmpabcde, 2);
    (*IOSIntArray_GetRef(tmpabcde, 2)) = [ComFqLibToolsSHA1 f4WithInt:IOSIntArray_Get(tmpabcde, 1) withInt:30];
    (*IOSIntArray_GetRef(tmpabcde, 1)) = IOSIntArray_Get(tmpabcde, 0);
    (*IOSIntArray_GetRef(tmpabcde, 0)) = tmp;
  }
  for (int l = 40; l <= 59; l++) {
    int tmp = [ComFqLibToolsSHA1 f4WithInt:IOSIntArray_Get(tmpabcde, 0) withInt:5] +
#line 126
    [ComFqLibToolsSHA1 f3WithInt:IOSIntArray_Get(tmpabcde, 1) withInt:IOSIntArray_Get(tmpabcde, 2) withInt:IOSIntArray_Get(tmpabcde, 3)] + IOSIntArray_Get(tmpabcde, 4) + IOSIntArray_Get(nil_chk(
#line 127
    ComFqLibToolsSHA1_tmpData_), l) + (int) 0x8f1bbcdc;
    (*IOSIntArray_GetRef(tmpabcde, 4)) = IOSIntArray_Get(tmpabcde, 3);
    (*IOSIntArray_GetRef(tmpabcde, 3)) = IOSIntArray_Get(tmpabcde, 2);
    (*IOSIntArray_GetRef(tmpabcde, 2)) = [ComFqLibToolsSHA1 f4WithInt:IOSIntArray_Get(tmpabcde, 1) withInt:30];
    (*IOSIntArray_GetRef(tmpabcde, 1)) = IOSIntArray_Get(tmpabcde, 0);
    (*IOSIntArray_GetRef(tmpabcde, 0)) = tmp;
  }
  for (int m = 60; m <= 79; m++) {
    int tmp = [ComFqLibToolsSHA1 f4WithInt:IOSIntArray_Get(tmpabcde, 0) withInt:5] +
#line 136
    [ComFqLibToolsSHA1 f2WithInt:IOSIntArray_Get(tmpabcde, 1) withInt:IOSIntArray_Get(tmpabcde, 2) withInt:IOSIntArray_Get(tmpabcde, 3)] + IOSIntArray_Get(tmpabcde, 4) + IOSIntArray_Get(nil_chk(
#line 137
    ComFqLibToolsSHA1_tmpData_), m) + (int) 0xca62c1d6;
    (*IOSIntArray_GetRef(tmpabcde, 4)) = IOSIntArray_Get(tmpabcde, 3);
    (*IOSIntArray_GetRef(tmpabcde, 3)) = IOSIntArray_Get(tmpabcde, 2);
    (*IOSIntArray_GetRef(tmpabcde, 2)) = [ComFqLibToolsSHA1 f4WithInt:IOSIntArray_Get(tmpabcde, 1) withInt:30];
    (*IOSIntArray_GetRef(tmpabcde, 1)) = IOSIntArray_Get(tmpabcde, 0);
    (*IOSIntArray_GetRef(tmpabcde, 0)) = tmp;
  }
  for (int i2 = 0; i2 < (int) [tmpabcde count]; i2++) {
    (*IOSIntArray_GetRef(nil_chk(ComFqLibToolsSHA1_digestInt_), i2)) = IOSIntArray_Get(ComFqLibToolsSHA1_digestInt_, i2) + IOSIntArray_Get(tmpabcde, i2);
  }
  for (int n = 0; n < (int) [((IOSIntArray *) nil_chk(ComFqLibToolsSHA1_tmpData_)) count]; n++) {
    (*IOSIntArray_GetRef(ComFqLibToolsSHA1_tmpData_, n)) = 0;
  }
}


#line 152
+ (int)byteArrayToIntWithByteArray:(IOSByteArray *)bytedata
                           withInt:(int)i {
  
#line 153
  return ((IOSByteArray_Get(nil_chk(bytedata), i) & (int) 0xff) << 24) | ((IOSByteArray_Get(bytedata, i + 1) & (int) 0xff) << 16) |
#line 154
  ((IOSByteArray_Get(bytedata, i + 2) & (int) 0xff) << 8) | (IOSByteArray_Get(bytedata, i + 3) & (int) 0xff);
}


#line 157
+ (void)intToByteArrayWithInt:(int)intValue
                withByteArray:(IOSByteArray *)byteData
                      withInt:(int)i {
  
#line 158
  (*IOSByteArray_GetRef(nil_chk(byteData), i)) = (char) ((int) (((unsigned int) intValue) >> 24));
  (*IOSByteArray_GetRef(byteData, i + 1)) = (char) ((int) (((unsigned int) intValue) >> 16));
  (*IOSByteArray_GetRef(byteData, i + 2)) = (char) ((int) (((unsigned int) intValue) >> 8));
  (*IOSByteArray_GetRef(byteData, i + 3)) = (char) intValue;
}


#line 164
+ (NSString *)byteToHexStringWithByte:(char)ib {
  
#line 165
  IOSCharArray *Digit = [IOSCharArray arrayWithChars:(unichar[]){
#line 166
    '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C',
#line 167
    'D', 'E', 'F' } count:16];
    
#line 169
    IOSCharArray *ob = [IOSCharArray arrayWithLength:2];
    (*IOSCharArray_GetRef(ob, 0)) = IOSCharArray_Get(Digit, ((char) (((unsigned char) ib) >> 4)) & 0X0F);
    (*IOSCharArray_GetRef(ob, 1)) = IOSCharArray_Get(Digit, ib & 0X0F);
    NSString *s = [NSString stringWithCharacters:ob];
    return s;
  }


#line 176
+ (NSString *)byteArrayToHexStringWithByteArray:(IOSByteArray *)bytearray {
  
#line 177
  NSString *strDigest = @"";
  for (int i = 0; i < (int) [((IOSByteArray *) nil_chk(bytearray)) count]; i++) {
    strDigest = [NSString stringWithFormat:@"%@%@", strDigest, [ComFqLibToolsSHA1 byteToHexStringWithByte:IOSByteArray_Get(bytearray, i)]];
  }
  return [((NSString *) nil_chk([strDigest trim])) lowercaseString];
}


#line 184
+ (IOSByteArray *)getDigestOfBytesWithByteArray:(IOSByteArray *)byteData {
  
#line 185
  [ComFqLibToolsSHA1 process_input_bytesWithByteArray:byteData];
  IOSByteArray *digest = [IOSByteArray arrayWithLength:20];
  for (int i = 0; i < (int) [((IOSIntArray *) nil_chk(ComFqLibToolsSHA1_digestInt_)) count]; i++) {
    [ComFqLibToolsSHA1 intToByteArrayWithInt:IOSIntArray_Get(ComFqLibToolsSHA1_digestInt_, i) withByteArray:digest withInt:i * 4];
  }
  return digest;
}


#line 193
+ (NSString *)getDigestOfStringWithByteArray:(IOSByteArray *)byteData {
  
#line 194
  return [ComFqLibToolsSHA1 byteArrayToHexStringWithByteArray:[ComFqLibToolsSHA1 getDigestOfBytesWithByteArray:byteData]];
}

- (id)init {
  return [super init];
}

+ (void)initialize {
  if (self == [ComFqLibToolsSHA1 class]) {
    ComFqLibToolsSHA1_abcde_ = [IOSIntArray arrayWithInts:(int[]){
#line 4
      (int) 0x67452301, (int) 0xefcdab89, (int) 0x98badcfe, (int) 0x10325476, (int) 0xc3d2e1f0 } count:5];
      ComFqLibToolsSHA1_digestInt_ = [IOSIntArray arrayWithLength:
#line 7
      5];
      ComFqLibToolsSHA1_tmpData_ = [IOSIntArray arrayWithLength:
#line 9
      80];
      ComFqLibToolsSHA1_initialized = YES;
    }
  }

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "process_input_bytesWithByteArray:", "process_input_bytes", "I", 0xa, NULL },
    { "byteArrayFormatDataWithByteArray:", "byteArrayFormatData", "[B", 0xa, NULL },
    { "f1WithInt:withInt:withInt:", "f1", "I", 0xa, NULL },
    { "f2WithInt:withInt:withInt:", "f2", "I", 0xa, NULL },
    { "f3WithInt:withInt:withInt:", "f3", "I", 0xa, NULL },
    { "f4WithInt:withInt:", "f4", "I", 0xa, NULL },
    { "encrypt", NULL, "V", 0xa, NULL },
    { "byteArrayToIntWithByteArray:withInt:", "byteArrayToInt", "I", 0xa, NULL },
    { "intToByteArrayWithInt:withByteArray:withInt:", "intToByteArray", "V", 0xa, NULL },
    { "byteToHexStringWithByte:", "byteToHexString", "Ljava.lang.String;", 0xa, NULL },
    { "byteArrayToHexStringWithByteArray:", "byteArrayToHexString", "Ljava.lang.String;", 0xa, NULL },
    { "getDigestOfBytesWithByteArray:", "getDigestOfBytes", "[B", 0x9, NULL },
    { "getDigestOfStringWithByteArray:", "getDigestOfString", "Ljava.lang.String;", 0x9, NULL },
    { "init", NULL, NULL, 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "abcde_", NULL, 0x1a, "[I", &ComFqLibToolsSHA1_abcde_,  },
    { "digestInt_", NULL, 0xa, "[I", &ComFqLibToolsSHA1_digestInt_,  },
    { "tmpData_", NULL, 0xa, "[I", &ComFqLibToolsSHA1_tmpData_,  },
  };
  static J2ObjcClassInfo _ComFqLibToolsSHA1 = { "SHA1", "com.fq.lib.tools", NULL, 0x1, 14, methods, 3, fields, 0, NULL};
  return &_ComFqLibToolsSHA1;
}

@end
