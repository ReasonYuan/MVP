//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/liaomin/Documents/workspace/Android/DocPlusLogic/src/com/fq/halcyon/uilogic/RegisterUILogic.java
//
//  Created by liaomin on 15-5-4.
//

#line 1 "/Users/liaomin/Documents/workspace/Android/DocPlusLogic/src/com/fq/halcyon/uilogic/RegisterUILogic.java"

#include "RegisterUILogic.h"
#include "Tool.h"
#include "java/io/PrintStream.h"
#include "java/lang/Boolean.h"
#include "java/lang/System.h"
#include "java/util/regex/Matcher.h"
#include "java/util/regex/Pattern.h"

@implementation ComFqHalcyonUilogicRegisterUILogic


#line 28
- (int)checkPwdLevelWithNSString:(NSString *)password {
  
#line 29
  if (((int) [((NSString *) nil_chk(password)) length]) > 12) {
    return ComFqHalcyonUilogicRegisterUILogic_LEVEL_STRONG;
  }
  else
#line 31
  if (((int) [password length]) > 8) {
    return ComFqHalcyonUilogicRegisterUILogic_LEVEL_MIDDLE;
  }
  else
#line 33
  if (((int) [password length]) >= 6) {
    return ComFqHalcyonUilogicRegisterUILogic_LEVEL_WEAK;
  }
  else {
    
#line 36
    return ComFqHalcyonUilogicRegisterUILogic_LEVEL_ERROR;
  }
}


#line 46
- (BOOL)checkPhoneWithNSString:(NSString *)phone {
  
#line 47
  if (phone == nil || ((int) [phone length]) != 11) {
    return NO;
  }
  else {
    
#line 50
    return YES;
  }
}


#line 61
+ (BOOL)checkPasswordWithNSString:(NSString *)password {
  
#line 62
  if (password == nil || [@"" isEqual:password] ||
#line 63
  ![ComFqLibToolsTool checkPasswordWithNSString:password]) {
    return NO;
  }
  else {
    
#line 66
    return YES;
  }
}


#line 77
+ (BOOL)checkInviteWithNSString:(NSString *)invite {
  
#line 78
  if (invite == nil || [@"" isEqual:invite] ||
#line 79
  ![ComFqLibToolsTool checkInviteWithNSString:invite]) {
    return NO;
  }
  else {
    
#line 82
    return YES;
  }
}


#line 93
- (BOOL)checkVertificationWithNSString:(NSString *)vertification {
  
#line 94
  if (vertification == nil || [@"" isEqual:vertification]) {
    return NO;
  }
  else {
    
#line 97
    return YES;
  }
}


#line 110
- (BOOL)isSamePwdWithNSString:(NSString *)password
                 withNSString:(NSString *)rePassword {
  
#line 111
  if (password != nil && [password isEqual:rePassword]) {
    return YES;
  }
  else {
    
#line 114
    return NO;
  }
}


#line 133
- (BOOL)checkInputWithNSString:(NSString *)phone
                  withNSString:(NSString *)password
                  withNSString:(NSString *)rePassword
                  withNSString:(NSString *)vertification
withComFqHalcyonUilogicRegisterUILogic_MessageCallBack:(id<ComFqHalcyonUilogicRegisterUILogic_MessageCallBack>)messageCallBack {
  
#line 135
  if (![self checkPhoneWithNSString:phone]) {
    if (messageCallBack != nil) {
      [messageCallBack messageWithNSString:@"\u8bf7\u8f93\u516511\u4f4d\u624b\u673a\u53f7\u7801"];
    }
    return NO;
  }
  else
#line 140
  if (![ComFqHalcyonUilogicRegisterUILogic checkPasswordWithNSString:password]) {
    if (messageCallBack != nil) {
      [messageCallBack messageWithNSString:@"\u8bf7\u8f93\u5165\u4e0d\u5c11\u4e8e6\u4f4d\u7684\u6570\u5b57\u5b57\u6bcd\u5bc6\u7801\u7ec4\u5408"];
    }
    return NO;
  }
  else
#line 145
  if (![self checkVertificationWithNSString:vertification]) {
    if (messageCallBack != nil) {
      [messageCallBack messageWithNSString:@"\u8bf7\u8f93\u5165\u9a8c\u8bc1\u7801"];
    }
    return NO;
  }
  else {
    
#line 151
    return YES;
  }
}


#line 167
+ (BOOL)isMobileNOWithNSString:(NSString *)mobiles {
  
#line 170
  JavaUtilRegexPattern *p = [JavaUtilRegexPattern compileWithNSString:@"^1\\d{10}$"];
  JavaUtilRegexMatcher *m = [((JavaUtilRegexPattern *) nil_chk(p)) matcherWithJavaLangCharSequence:mobiles];
  [((JavaIoPrintStream *) nil_chk(JavaLangSystem_get_out_())) printlnWithNSString:[NSString stringWithFormat:@"%@---", [JavaLangBoolean toStringWithBoolean:[((JavaUtilRegexMatcher *) nil_chk(m)) matches]]]];
  return [m matches];
}

- (id)init {
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "checkPwdLevelWithNSString:", "checkPwdLevel", "I", 0x1, NULL },
    { "checkPhoneWithNSString:", "checkPhone", "Z", 0x1, NULL },
    { "checkPasswordWithNSString:", "checkPassword", "Z", 0x9, NULL },
    { "checkInviteWithNSString:", "checkInvite", "Z", 0x9, NULL },
    { "checkVertificationWithNSString:", "checkVertification", "Z", 0x1, NULL },
    { "isSamePwdWithNSString:withNSString:", "isSamePwd", "Z", 0x1, NULL },
    { "checkInputWithNSString:withNSString:withNSString:withNSString:withComFqHalcyonUilogicRegisterUILogic_MessageCallBack:", "checkInput", "Z", 0x1, NULL },
    { "isMobileNOWithNSString:", "isMobileNO", "Z", 0x9, NULL },
    { "init", NULL, NULL, 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "LEVEL_STRONG_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComFqHalcyonUilogicRegisterUILogic_LEVEL_STRONG },
    { "LEVEL_MIDDLE_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComFqHalcyonUilogicRegisterUILogic_LEVEL_MIDDLE },
    { "LEVEL_WEAK_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComFqHalcyonUilogicRegisterUILogic_LEVEL_WEAK },
    { "LEVEL_ERROR_", NULL, 0x19, "I", NULL, .constantValue.asInt = ComFqHalcyonUilogicRegisterUILogic_LEVEL_ERROR },
  };
  static J2ObjcClassInfo _ComFqHalcyonUilogicRegisterUILogic = { "RegisterUILogic", "com.fq.halcyon.uilogic", NULL, 0x1, 9, methods, 4, fields, 0, NULL};
  return &_ComFqHalcyonUilogicRegisterUILogic;
}

@end

@interface ComFqHalcyonUilogicRegisterUILogic_MessageCallBack : NSObject
@end

@implementation ComFqHalcyonUilogicRegisterUILogic_MessageCallBack

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "messageWithNSString:", "message", "V", 0x401, NULL },
  };
  static J2ObjcClassInfo _ComFqHalcyonUilogicRegisterUILogic_MessageCallBack = { "MessageCallBack", "com.fq.halcyon.uilogic", "RegisterUILogic", 0x209, 1, methods, 0, NULL, 0, NULL};
  return &_ComFqHalcyonUilogicRegisterUILogic_MessageCallBack;
}

@end
