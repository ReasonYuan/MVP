//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/liaomin/Documents/workspace/Android/DocPlusLogic/src/com/fq/halcyon/logic2/DoctorHomeLogic.java
//
//  Created by liaomin on 15-5-4.
//

#line 1 "/Users/liaomin/Documents/workspace/Android/DocPlusLogic/src/com/fq/halcyon/logic2/DoctorHomeLogic.java"

#include "ApiSystem.h"
#include "Constants.h"
#include "DoctorHomeLogic.h"
#include "FQHttpParams.h"
#include "HomeOneDayData.h"
#include "HttpRequestPotocol.h"
#include "IOSClass.h"
#include "JSONArray.h"
#include "JSONException.h"
#include "JSONObject.h"
#include "JsonHelper.h"
#include "TimeFormatUtils.h"
#include "UriConstants.h"
#include "User.h"
#include "java/lang/Exception.h"
#include "java/lang/Integer.h"
#include "java/lang/System.h"
#include "java/lang/Throwable.h"
#include "java/util/ArrayList.h"
#include "java/util/Calendar.h"
#include "java/util/Collections.h"
#include "java/util/Date.h"
#include "java/util/HashMap.h"
#include "java/util/Iterator.h"
#include "java/util/LinkedHashMap.h"
#include "java/util/Map.h"
#include "java/util/TreeMap.h"


#line 28
@implementation ComFqHalcyonLogic2DoctorHomeLogic


#line 32
- (id<ComFqHttpPotocolHttpRequestPotocol>)requestPatientMonthWithComFqHalcyonLogic2DoctorHomeLogic_OnDoctorHomeCallback:(id<ComFqHalcyonLogic2DoctorHomeLogic_OnDoctorHomeCallback>)callback {
  
#line 33
  if ([ComFqLibToolsConstants getUser] == nil) return nil;
  JavaUtilHashMap *map = [[JavaUtilHashMap alloc] init];
  (void) [map putWithId:@"user_id" withId:[JavaLangInteger valueOfWithInt:[((ComFqHalcyonEntityUser *) nil_chk([ComFqLibToolsConstants getUser])) getUserId]]];
  
#line 37
  ComFqHttpAsyncFQHttpParams *params = [[ComFqHttpAsyncFQHttpParams alloc] initWithFQJSONObject:[ComFqLibJsonHelper createJsonWithJavaUtilMap:map]];
  NSString *url = [NSString stringWithFormat:@"%@/timer/stat.do", ComFqLibToolsUriConstants_Conn_get_URL_PUB_()];
  
#line 40
  return [((ComFqHalcyonApiApiSystem *) nil_chk([ComFqHalcyonApiApiSystem getInstance])) requireWithNSString:url withComFqHttpAsyncFQHttpParams:params withComFqHalcyonApiApiSystem_API_TYPEEnum:ComFqHalcyonApiApiSystem_API_TYPEEnum_get_BROW() withHalcyonHttpResponseHandle:
#line 41
  [[ComFqHalcyonLogic2DoctorHomeLogic_$1 alloc] initWithComFqHalcyonLogic2DoctorHomeLogic_OnDoctorHomeCallback:callback]];
}


#line 77
- (id<ComFqHttpPotocolHttpRequestPotocol>)requestPatientsWithLong:(long long int)date
       withComFqHalcyonLogic2DoctorHomeLogic_OnDoctorHomeCallback:(id<ComFqHalcyonLogic2DoctorHomeLogic_OnDoctorHomeCallback>)callback {
  
#line 78
  return [self requestPatientsWithLong:date withInt:30 withInt:30 withComFqHalcyonLogic2DoctorHomeLogic_OnDoctorHomeCallback:callback];
}


#line 81
- (id<ComFqHttpPotocolHttpRequestPotocol>)requestPatientsWithComFqHalcyonLogic2DoctorHomeLogic_OnDoctorHomeCallback:(id<ComFqHalcyonLogic2DoctorHomeLogic_OnDoctorHomeCallback>)callback {
  
#line 82
  return [self requestPatientsWithLong:[JavaLangSystem currentTimeMillis] withInt:30 withInt:30 withComFqHalcyonLogic2DoctorHomeLogic_OnDoctorHomeCallback:callback];
}


#line 91
- (id<ComFqHttpPotocolHttpRequestPotocol>)requestOneDayPatientsForAlarmWithLong:(long long int)data
                     withComFqHalcyonLogic2DoctorHomeLogic_OnDoctorHomeCallback:(id<ComFqHalcyonLogic2DoctorHomeLogic_OnDoctorHomeCallback>)callback {
  
#line 92
  NSString *format = @"yyyy-MM-dd";
  JavaUtilCalendar *calendar = [JavaUtilCalendar getInstance];
  [((JavaUtilCalendar *) nil_chk(calendar)) setTimeInMillisWithLong:data];
  [calendar addWithInt:JavaUtilCalendar_DAY_OF_YEAR withInt:1];
  NSString *toDate = [ComFqLibToolsTimeFormatUtils getTimeByFormatWithLong:[calendar getTimeInMillis] withNSString:format];
  NSString *startDate = [ComFqLibToolsTimeFormatUtils getTimeByFormatWithLong:data withNSString:format];
  NSString *url = [NSString stringWithFormat:@"%@/timer/home.do", ComFqLibToolsUriConstants_Conn_get_URL_PUB_()];
  
#line 100
  JavaUtilHashMap *map = [[JavaUtilHashMap alloc] init];
  (void) [map putWithId:@"user_id" withId:[JavaLangInteger valueOfWithInt:[((ComFqHalcyonEntityUser *) nil_chk([ComFqLibToolsConstants getUser])) getUserId]]];
  (void) [map putWithId:@"from_date" withId:startDate];
  (void) [map putWithId:@"to_date" withId:toDate];
  ComFqHttpAsyncFQHttpParams *params = [[ComFqHttpAsyncFQHttpParams alloc] initWithFQJSONObject:[ComFqLibJsonHelper createJsonWithJavaUtilMap:map]];
  return [((ComFqHalcyonApiApiSystem *) nil_chk([ComFqHalcyonApiApiSystem getInstance])) requireWithNSString:url withComFqHttpAsyncFQHttpParams:params withComFqHalcyonApiApiSystem_API_TYPEEnum:ComFqHalcyonApiApiSystem_API_TYPEEnum_get_BROW() withHalcyonHttpResponseHandle:
#line 106
  [[ComFqHalcyonLogic2DoctorHomeLogic_$2 alloc] initWithComFqHalcyonLogic2DoctorHomeLogic_OnDoctorHomeCallback:callback]];
}


#line 138
- (void)requestOneDayPatientsWithLong:(long long int)data
withComFqHalcyonLogic2DoctorHomeLogic_OnDoctorHomeCallback:(id<ComFqHalcyonLogic2DoctorHomeLogic_OnDoctorHomeCallback>)callback {
  
#line 154
  NSString *format = @"yyyy-MM-dd";
  JavaUtilCalendar *calendar = [JavaUtilCalendar getInstance];
  [((JavaUtilCalendar *) nil_chk(calendar)) setTimeInMillisWithLong:data];
  [calendar addWithInt:JavaUtilCalendar_DAY_OF_YEAR withInt:1];
  NSString *toDate = [ComFqLibToolsTimeFormatUtils getTimeByFormatWithLong:[calendar getTimeInMillis] withNSString:format];
  NSString *startDate = [ComFqLibToolsTimeFormatUtils getTimeByFormatWithLong:data withNSString:format];
  NSString *url = [NSString stringWithFormat:@"%@/timer/home.do", ComFqLibToolsUriConstants_Conn_get_URL_PUB_()];
  
#line 162
  JavaUtilHashMap *map = [[JavaUtilHashMap alloc] init];
  (void) [map putWithId:@"user_id" withId:[JavaLangInteger valueOfWithInt:[((ComFqHalcyonEntityUser *) nil_chk([ComFqLibToolsConstants getUser])) getUserId]]];
  (void) [map putWithId:@"from_date" withId:startDate];
  (void) [map putWithId:@"to_date" withId:toDate];
  ComFqHttpAsyncFQHttpParams *params = [[ComFqHttpAsyncFQHttpParams alloc] initWithFQJSONObject:[ComFqLibJsonHelper createJsonWithJavaUtilMap:map]];
  (void) [((ComFqHalcyonApiApiSystem *) nil_chk([ComFqHalcyonApiApiSystem getInstance])) requireWithNSString:url withComFqHttpAsyncFQHttpParams:params withComFqHalcyonApiApiSystem_API_TYPEEnum:ComFqHalcyonApiApiSystem_API_TYPEEnum_get_BROW() withHalcyonHttpResponseHandle:
#line 168
  [[ComFqHalcyonLogic2DoctorHomeLogic_$3 alloc] initWithComFqHalcyonLogic2DoctorHomeLogic_OnDoctorHomeCallback:callback]];
}


#line 200
- (id<ComFqHttpPotocolHttpRequestPotocol>)requestPatientsWithLong:(long long int)date
                                                          withInt:(int)fromDay
                                                          withInt:(int)toDay
       withComFqHalcyonLogic2DoctorHomeLogic_OnDoctorHomeCallback:(id<ComFqHalcyonLogic2DoctorHomeLogic_OnDoctorHomeCallback>)callback {
  
#line 202
  long long int currentTime = [JavaLangSystem currentTimeMillis];
  
#line 204
  if (currentTime - mLastRequestDataTime_ <= 500 || date == 0) {
    [((id<ComFqHalcyonLogic2DoctorHomeLogic_OnDoctorHomeCallback>) nil_chk(callback)) feedHomeDatasWithJavaUtilArrayList:nil];
    return nil;
  }
  mLastRequestDataTime_ = currentTime;
  NSString *format = @"yyyy-MM-dd";
  
#line 211
  JavaUtilCalendar *cal = [JavaUtilCalendar getInstance];
  NSString *fromDate = @"";
  NSString *toDate = @"";
  NSString *currDdate = [ComFqLibToolsTimeFormatUtils getTimeByFormatWithLong:date withNSString:format];
  if (fromDay == 0) {
    fromDate = currDdate;
  }
  else {
    
#line 218
    [((JavaUtilCalendar *) nil_chk(cal)) setTimeInMillisWithLong:date];
    [cal addWithInt:JavaUtilCalendar_DATE withInt:-fromDay];
    fromDate = [ComFqLibToolsTimeFormatUtils getTimeByFormatWithLong:[cal getTimeInMillis] withNSString:
#line 221
    format];
  }
  if (toDay == 0) {
    toDate = currDdate;
  }
  else {
    
#line 226
    [((JavaUtilCalendar *) nil_chk(cal)) setTimeInMillisWithLong:date];
    [cal addWithInt:JavaUtilCalendar_DATE withInt:toDay];
    toDate = [ComFqLibToolsTimeFormatUtils getTimeByFormatWithLong:[cal getTimeInMillis] withNSString:
#line 229
    format];
  }
  
#line 232
  JavaUtilHashMap *map = [[JavaUtilHashMap alloc] init];
  (void) [map putWithId:@"user_id" withId:[JavaLangInteger valueOfWithInt:[((ComFqHalcyonEntityUser *) nil_chk([ComFqLibToolsConstants getUser])) getUserId]]];
  (void) [map putWithId:@"from_date" withId:fromDate];
  (void) [map putWithId:@"to_date" withId:toDate];
  
#line 239
  ComFqHttpAsyncFQHttpParams *params = [[ComFqHttpAsyncFQHttpParams alloc] initWithFQJSONObject:[ComFqLibJsonHelper createJsonWithJavaUtilMap:map]];
  NSString *url = [NSString stringWithFormat:@"%@/timer/home.do", ComFqLibToolsUriConstants_Conn_get_URL_PUB_()];
  
#line 242
  long long int from = [((JavaUtilDate *) nil_chk([ComFqLibToolsTimeFormatUtils getDate4StrWithNSString:fromDate withNSString:format])) getTime];
  int size = fromDay + toDay;
  return [((ComFqHalcyonApiApiSystem *) nil_chk([ComFqHalcyonApiApiSystem getInstance])) requireWithNSString:url withComFqHttpAsyncFQHttpParams:params withComFqHalcyonApiApiSystem_API_TYPEEnum:ComFqHalcyonApiApiSystem_API_TYPEEnum_get_BROW() withHalcyonHttpResponseHandle:
#line 245
  [[ComFqHalcyonLogic2DoctorHomeLogic_$4 alloc] initWithComFqHalcyonLogic2DoctorHomeLogic:self withComFqHalcyonLogic2DoctorHomeLogic_OnDoctorHomeCallback:callback withLong:from withInt:size]];
}


#line 281
- (JavaUtilArrayList *)fillListWithJavaUtilArrayList:(JavaUtilArrayList *)dayDatas
                                            withLong:(long long int)fromDate
                                             withInt:(int)size
                                     withFQJSONArray:(FQJSONArray *)numArray {
  
#line 282
  if (dayDatas == nil || [dayDatas size] == 0) {
    dayDatas = [[JavaUtilArrayList alloc] init];
    JavaUtilCalendar *cal = [JavaUtilCalendar getInstance];
    [((JavaUtilCalendar *) nil_chk(cal)) setTimeInMillisWithLong:fromDate];
    for (int i = 0; i < size; i++) {
      ComFqHalcyonEntityHomeOneDayData *info = [[ComFqHalcyonEntityHomeOneDayData alloc] init];
      [info setCalendarWithLong:[cal getTimeInMillis]];
      [dayDatas addWithInt:i withId:info];
      [cal addWithInt:JavaUtilCalendar_DATE withInt:1];
    }
    [self fillRecNumWithJavaUtilArrayList:dayDatas withFQJSONArray:numArray];
    return dayDatas;
  }
  
#line 296
  if ([((JavaUtilArrayList *) nil_chk(dayDatas)) size] >= size)
#line 297
  return dayDatas;
  
#line 299
  JavaUtilCalendar *cal = [JavaUtilCalendar getInstance];
  JavaUtilCalendar *calDate = [JavaUtilCalendar getInstance];
  [((JavaUtilCalendar *) nil_chk(cal)) setTimeInMillisWithLong:fromDate];
  
#line 303
  for (int i = 0; i < size; i++) {
    if ([dayDatas size] <= i) {
      ComFqHalcyonEntityHomeOneDayData *info = [[ComFqHalcyonEntityHomeOneDayData alloc] init];
      [info setCalendarWithLong:[cal getTimeInMillis]];
      [dayDatas addWithInt:i withId:info];
    }
    else {
      
#line 309
      [((JavaUtilCalendar *) nil_chk(calDate)) setTimeInMillisWithLong:[((ComFqHalcyonEntityHomeOneDayData *) nil_chk([dayDatas getWithInt:i])) getTimeMillis]];
      if ([cal getWithInt:JavaUtilCalendar_DAY_OF_YEAR] != [calDate getWithInt:JavaUtilCalendar_DAY_OF_YEAR]) {
        ComFqHalcyonEntityHomeOneDayData *info = [[ComFqHalcyonEntityHomeOneDayData alloc] init];
        [info setCalendarWithLong:[cal getTimeInMillis]];
        [dayDatas addWithInt:i withId:info];
      }
    }
    [cal addWithInt:JavaUtilCalendar_DATE withInt:1];
  }
  
#line 319
  [self fillRecNumWithJavaUtilArrayList:dayDatas withFQJSONArray:numArray];
  
#line 321
  return dayDatas;
}


#line 329
- (void)fillRecNumWithJavaUtilArrayList:(JavaUtilArrayList *)dayDatas
                        withFQJSONArray:(FQJSONArray *)numArray {
  
#line 331
  if (numArray != nil) {
    for (int i = 0; i < [numArray length]; i++) {
      FQJSONObject *temp = [numArray optJSONObjectWithInt:i];
      NSString *dateStr = [((FQJSONObject *) nil_chk(temp)) optStringWithNSString:@"date"];
      long long int dateLong = [ComFqLibToolsTimeFormatUtils getTimeMillisByDateWithNSString:dateStr];
      int recongnizedNum = [temp optIntWithNSString:@"recongnizedNum"];
      BOOL isExist = NO;
      for (int j = 0; j < [((JavaUtilArrayList *) nil_chk(dayDatas)) size] && !isExist; j++) {
        if ([((ComFqHalcyonEntityHomeOneDayData *) nil_chk([dayDatas getWithInt:j])) getTimeMillis] == dateLong) {
          [((ComFqHalcyonEntityHomeOneDayData *) nil_chk([dayDatas getWithInt:j])) setmRecRecongnizedNumWithInt:recongnizedNum];
          isExist = YES;
        }
      }
    }
  }
}


#line 351
+ (int)getCurrentDayIndexWithJavaUtilArrayList:(JavaUtilArrayList *)dayDatas {
  
#line 352
  for (int i = 0; i < [((JavaUtilArrayList *) nil_chk(dayDatas)) size]; i++) {
    ComFqHalcyonEntityHomeOneDayData *info = [dayDatas getWithInt:i];
    if ([((ComFqHalcyonEntityHomeOneDayData *) nil_chk(info)) getCurrentSate] == ComFqHalcyonEntityHomeOneDayData_CurrSateEnum_get_CURR()) {
      return i;
    }
  }
  return -1;
}


#line 361
+ (JavaUtilLinkedHashMap *)getPatientTreeWithJavaUtilArrayList:(JavaUtilArrayList *)dayDatas {
  JavaUtilLinkedHashMap *map = [[JavaUtilLinkedHashMap alloc] init];
  
#line 365
  for (ComFqHalcyonEntityHomeOneDayData * __strong data in nil_chk(dayDatas)) {
    int month = [((ComFqHalcyonEntityHomeOneDayData *) nil_chk(data)) getMonth];
    if ([map containsKeyWithId:[JavaLangInteger valueOfWithInt:month]]) {
      [((JavaUtilArrayList *) nil_chk([map getWithId:[JavaLangInteger valueOfWithInt:month]])) addWithId:data];
    }
    else {
      
#line 370
      JavaUtilArrayList *dataInfos = [[JavaUtilArrayList alloc] init];
      (void) [map putWithId:[JavaLangInteger valueOfWithInt:month] withId:dataInfos];
      [dataInfos addWithId:data];
    }
  }
  return map;
}


#line 378
+ (JavaUtilArrayList *)sortAndGroupWithJavaUtilArrayList:(JavaUtilArrayList *)data {
  
#line 380
  if (data != nil) {
    [JavaUtilCollections sortWithJavaUtilList:data withJavaUtilComparator:[[ComFqHalcyonLogic2DoctorHomeLogic_$5 alloc] init]];
    
#line 391
    JavaUtilArrayList *group = [[JavaUtilArrayList alloc] init];
    for (int i = 0; i < [data size]; i++) {
      JavaUtilArrayList *currentGroup = nil;
      ComFqHalcyonEntityHomeOneDayData *currnet = [data getWithInt:i];
      ComFqHalcyonEntityHomeOneDayData *last = i - 1 < 0 ? nil : [data getWithInt:i - 1];
      BOOL createNew = NO;
      if ([group isEmpty] || last == nil) {
        createNew = YES;
      }
      else {
        
#line 400
        if ([last getMonth] != [((ComFqHalcyonEntityHomeOneDayData *) nil_chk(currnet)) getMonth]) createNew = YES;
      }
      if (createNew) {
        currentGroup = [[JavaUtilArrayList alloc] init];
        [group addWithId:currentGroup];
      }
      currentGroup = [group getWithInt:[group size] - 1];
      [((JavaUtilArrayList *) nil_chk(currentGroup)) addWithId:currnet];
    }
    return group;
  }
  return nil;
}

- (id)init {
  return [super init];
}

- (void)copyAllFieldsTo:(ComFqHalcyonLogic2DoctorHomeLogic *)other {
  [super copyAllFieldsTo:other];
  other->mLastRequestDataTime_ = mLastRequestDataTime_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "requestPatientMonthWithComFqHalcyonLogic2DoctorHomeLogic_OnDoctorHomeCallback:", "requestPatientMonth", "Lcom.fq.http.potocol.HttpRequestPotocol;", 0x1, NULL },
    { "requestPatientsWithLong:withComFqHalcyonLogic2DoctorHomeLogic_OnDoctorHomeCallback:", "requestPatients", "Lcom.fq.http.potocol.HttpRequestPotocol;", 0x1, NULL },
    { "requestPatientsWithComFqHalcyonLogic2DoctorHomeLogic_OnDoctorHomeCallback:", "requestPatients", "Lcom.fq.http.potocol.HttpRequestPotocol;", 0x1, NULL },
    { "requestOneDayPatientsForAlarmWithLong:withComFqHalcyonLogic2DoctorHomeLogic_OnDoctorHomeCallback:", "requestOneDayPatientsForAlarm", "Lcom.fq.http.potocol.HttpRequestPotocol;", 0x1, NULL },
    { "requestOneDayPatientsWithLong:withComFqHalcyonLogic2DoctorHomeLogic_OnDoctorHomeCallback:", "requestOneDayPatients", "V", 0x1, NULL },
    { "requestPatientsWithLong:withInt:withInt:withComFqHalcyonLogic2DoctorHomeLogic_OnDoctorHomeCallback:", "requestPatients", "Lcom.fq.http.potocol.HttpRequestPotocol;", 0x1, NULL },
    { "fillListWithJavaUtilArrayList:withLong:withInt:withFQJSONArray:", "fillList", "Ljava.util.ArrayList;", 0x2, NULL },
    { "fillRecNumWithJavaUtilArrayList:withFQJSONArray:", "fillRecNum", "V", 0x2, NULL },
    { "getCurrentDayIndexWithJavaUtilArrayList:", "getCurrentDayIndex", "I", 0x9, NULL },
    { "getPatientTreeWithJavaUtilArrayList:", "getPatientTree", "Ljava.util.LinkedHashMap;", 0x9, NULL },
    { "sortAndGroupWithJavaUtilArrayList:", "sortAndGroup", "Ljava.util.ArrayList;", 0x9, NULL },
    { "init", NULL, NULL, 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "mLastRequestDataTime_", NULL, 0x2, "J", NULL,  },
  };
  static J2ObjcClassInfo _ComFqHalcyonLogic2DoctorHomeLogic = { "DoctorHomeLogic", "com.fq.halcyon.logic2", NULL, 0x1, 12, methods, 1, fields, 0, NULL};
  return &_ComFqHalcyonLogic2DoctorHomeLogic;
}

@end

@interface ComFqHalcyonLogic2DoctorHomeLogic_OnDoctorHomeCallback : NSObject
@end

@implementation ComFqHalcyonLogic2DoctorHomeLogic_OnDoctorHomeCallback

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "errorMonthWithNSString:", "errorMonth", "V", 0x401, NULL },
    { "feedMonthWithJavaUtilMap:", "feedMonth", "V", 0x401, NULL },
    { "errorWithNSString:", "error", "V", 0x401, NULL },
    { "feedHomeDatasWithJavaUtilArrayList:", "feedHomeDatas", "V", 0x401, NULL },
  };
  static J2ObjcClassInfo _ComFqHalcyonLogic2DoctorHomeLogic_OnDoctorHomeCallback = { "OnDoctorHomeCallback", "com.fq.halcyon.logic2", "DoctorHomeLogic", 0x201, 4, methods, 0, NULL, 0, NULL};
  return &_ComFqHalcyonLogic2DoctorHomeLogic_OnDoctorHomeCallback;
}

@end

@implementation ComFqHalcyonLogic2DoctorHomeLogic_$1


#line 42
- (void)onErrorWithInt:(int)code
 withJavaLangThrowable:(JavaLangThrowable *)e {
  
#line 43
  [((id<ComFqHalcyonLogic2DoctorHomeLogic_OnDoctorHomeCallback>) nil_chk(val$callback_)) errorMonthWithNSString:@"\u4f60\u5f53\u524d\u8fd8\u6ca1\u6709\u6570\u636e"];
}


#line 47
- (void)handleWithInt:(int)responseCode
         withNSString:(NSString *)msg
              withInt:(int)type
               withId:(id)results {
  id<JavaUtilMap> data = [[JavaUtilTreeMap alloc] init];
  if (responseCode == 0 && type == 1) {
    @try {
      FQJSONObject *json = (FQJSONObject *) check_class_cast(results, [FQJSONObject class]);
      id<JavaUtilIterator> iterator = [((FQJSONObject *) nil_chk(json)) keys];
      while ([((id<JavaUtilIterator>) nil_chk(iterator)) hasNext]) {
        NSString *key = [NSString valueOf:[iterator next]];
        FQJSONArray *array = [json optJSONArrayWithNSString:key];
        JavaUtilArrayList *mouth = [[JavaUtilArrayList alloc] init];
        if (array != nil) {
          for (int i = 0; i < [array length]; i++) {
            [mouth addWithId:[JavaLangInteger valueOfWithInt:[array optIntWithInt:i]]];
          }
        }
        (void) [data putWithId:[JavaLangInteger valueOfWithNSString:key] withId:mouth];
      }
      if (val$callback_ != nil)
#line 66
      [val$callback_ feedMonthWithJavaUtilMap:data];
    }
    @catch (
#line 67
    JavaLangException *e) {
      [((JavaLangException *) nil_chk(e)) printStackTrace];
      [self onErrorWithInt:0 withJavaLangThrowable:e];
    }
  }
}

- (id)initWithComFqHalcyonLogic2DoctorHomeLogic_OnDoctorHomeCallback:(id<ComFqHalcyonLogic2DoctorHomeLogic_OnDoctorHomeCallback>)capture$0 {
  val$callback_ = capture$0;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "onErrorWithInt:withJavaLangThrowable:", "onError", "V", 0x1, NULL },
    { "handleWithInt:withNSString:withInt:withId:", "handle", "V", 0x1, NULL },
    { "initWithComFqHalcyonLogic2DoctorHomeLogic_OnDoctorHomeCallback:", "init", NULL, 0x0, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "val$callback_", NULL, 0x1012, "Lcom.fq.halcyon.logic2.DoctorHomeLogic$OnDoctorHomeCallback;", NULL,  },
  };
  static J2ObjcClassInfo _ComFqHalcyonLogic2DoctorHomeLogic_$1 = { "$1", "com.fq.halcyon.logic2", "DoctorHomeLogic", 0x8000, 3, methods, 1, fields, 0, NULL};
  return &_ComFqHalcyonLogic2DoctorHomeLogic_$1;
}

@end

@implementation ComFqHalcyonLogic2DoctorHomeLogic_$2


#line 107
- (void)onErrorWithInt:(int)code
 withJavaLangThrowable:(JavaLangThrowable *)e {
  
#line 108
  [((JavaLangThrowable *) nil_chk(e)) printStackTrace];
}


#line 112
- (void)handleWithInt:(int)responseCode
         withNSString:(NSString *)msg
              withInt:(int)type
               withId:(id)results {
  if (responseCode == 0 && type == 1) {
    FQJSONArray *array = [((FQJSONObject *) nil_chk(((FQJSONObject *) check_class_cast(results, [FQJSONObject class])))) optJSONArrayWithNSString:
#line 116
    @"contents"];
    if (array == nil)
#line 118
    [((id<ComFqHalcyonLogic2DoctorHomeLogic_OnDoctorHomeCallback>) nil_chk(val$callback_)) feedHomeDatasWithJavaUtilArrayList:nil];
    
#line 120
    JavaUtilArrayList *dataInfos = [[JavaUtilArrayList alloc] init];
    for (int i = 0; i < [((FQJSONArray *) nil_chk(array)) length]; i++) {
      @try {
        FQJSONObject *obj = [array getJSONObjectWithInt:i];
        ComFqHalcyonEntityHomeOneDayData *info = [[ComFqHalcyonEntityHomeOneDayData alloc] init];
        [info setAtttributeByjsonWithFQJSONObject:obj];
        [dataInfos addWithId:info];
      }
      @catch (
#line 127
      FQJSONException *e) {
        [((FQJSONException *) nil_chk(e)) printStackTrace];
      }
    }
    [((id<ComFqHalcyonLogic2DoctorHomeLogic_OnDoctorHomeCallback>) nil_chk(val$callback_)) feedHomeDatasWithJavaUtilArrayList:dataInfos];
  }
}

- (id)initWithComFqHalcyonLogic2DoctorHomeLogic_OnDoctorHomeCallback:(id<ComFqHalcyonLogic2DoctorHomeLogic_OnDoctorHomeCallback>)capture$0 {
  val$callback_ = capture$0;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "onErrorWithInt:withJavaLangThrowable:", "onError", "V", 0x1, NULL },
    { "handleWithInt:withNSString:withInt:withId:", "handle", "V", 0x1, NULL },
    { "initWithComFqHalcyonLogic2DoctorHomeLogic_OnDoctorHomeCallback:", "init", NULL, 0x0, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "val$callback_", NULL, 0x1012, "Lcom.fq.halcyon.logic2.DoctorHomeLogic$OnDoctorHomeCallback;", NULL,  },
  };
  static J2ObjcClassInfo _ComFqHalcyonLogic2DoctorHomeLogic_$2 = { "$2", "com.fq.halcyon.logic2", "DoctorHomeLogic", 0x8000, 3, methods, 1, fields, 0, NULL};
  return &_ComFqHalcyonLogic2DoctorHomeLogic_$2;
}

@end

@implementation ComFqHalcyonLogic2DoctorHomeLogic_$3


#line 169
- (void)onErrorWithInt:(int)code
 withJavaLangThrowable:(JavaLangThrowable *)e {
  
#line 170
  [((JavaLangThrowable *) nil_chk(e)) printStackTrace];
}


#line 174
- (void)handleWithInt:(int)responseCode
         withNSString:(NSString *)msg
              withInt:(int)type
               withId:(id)results {
  if (responseCode == 0 && type == 1) {
    FQJSONArray *array = [((FQJSONObject *) nil_chk(((FQJSONObject *) check_class_cast(results, [FQJSONObject class])))) optJSONArrayWithNSString:
#line 178
    @"contents"];
    if (array == nil)
#line 180
    [((id<ComFqHalcyonLogic2DoctorHomeLogic_OnDoctorHomeCallback>) nil_chk(val$callback_)) feedHomeDatasWithJavaUtilArrayList:nil];
    
#line 182
    JavaUtilArrayList *dataInfos = [[JavaUtilArrayList alloc] init];
    for (int i = 0; i < [((FQJSONArray *) nil_chk(array)) length]; i++) {
      @try {
        FQJSONObject *obj = [array getJSONObjectWithInt:i];
        ComFqHalcyonEntityHomeOneDayData *info = [[ComFqHalcyonEntityHomeOneDayData alloc] init];
        [info setAtttributeByjsonWithFQJSONObject:obj];
        [dataInfos addWithId:info];
      }
      @catch (
#line 189
      FQJSONException *e) {
        [((FQJSONException *) nil_chk(e)) printStackTrace];
      }
    }
    [((id<ComFqHalcyonLogic2DoctorHomeLogic_OnDoctorHomeCallback>) nil_chk(val$callback_)) feedHomeDatasWithJavaUtilArrayList:dataInfos];
  }
}

- (id)initWithComFqHalcyonLogic2DoctorHomeLogic_OnDoctorHomeCallback:(id<ComFqHalcyonLogic2DoctorHomeLogic_OnDoctorHomeCallback>)capture$0 {
  val$callback_ = capture$0;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "onErrorWithInt:withJavaLangThrowable:", "onError", "V", 0x1, NULL },
    { "handleWithInt:withNSString:withInt:withId:", "handle", "V", 0x1, NULL },
    { "initWithComFqHalcyonLogic2DoctorHomeLogic_OnDoctorHomeCallback:", "init", NULL, 0x0, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "val$callback_", NULL, 0x1012, "Lcom.fq.halcyon.logic2.DoctorHomeLogic$OnDoctorHomeCallback;", NULL,  },
  };
  static J2ObjcClassInfo _ComFqHalcyonLogic2DoctorHomeLogic_$3 = { "$3", "com.fq.halcyon.logic2", "DoctorHomeLogic", 0x8000, 3, methods, 1, fields, 0, NULL};
  return &_ComFqHalcyonLogic2DoctorHomeLogic_$3;
}

@end

@implementation ComFqHalcyonLogic2DoctorHomeLogic_$4


#line 246
- (void)onErrorWithInt:(int)code
 withJavaLangThrowable:(JavaLangThrowable *)e {
  
#line 247
  [((JavaLangThrowable *) nil_chk(e)) printStackTrace];
  [((id<ComFqHalcyonLogic2DoctorHomeLogic_OnDoctorHomeCallback>) nil_chk(val$callback_)) feedHomeDatasWithJavaUtilArrayList:[this$0_ fillListWithJavaUtilArrayList:nil withLong:val$from_ withInt:val$size_ withFQJSONArray:nil]];
}


#line 252
- (void)handleWithInt:(int)responseCode
         withNSString:(NSString *)msg
              withInt:(int)type
               withId:(id)results {
  if (responseCode == 0 && type == 1) {
    FQJSONArray *array = [((FQJSONObject *) nil_chk(((FQJSONObject *) check_class_cast(results, [FQJSONObject class])))) optJSONArrayWithNSString:@"contents"];
    if (array == nil)
#line 257
    [((id<ComFqHalcyonLogic2DoctorHomeLogic_OnDoctorHomeCallback>) nil_chk(val$callback_)) feedHomeDatasWithJavaUtilArrayList:nil];
    
#line 259
    JavaUtilArrayList *dataInfos = [[JavaUtilArrayList alloc] init];
    for (int i = 0; i < [((FQJSONArray *) nil_chk(array)) length]; i++) {
      @try {
        FQJSONObject *obj = [array getJSONObjectWithInt:i];
        ComFqHalcyonEntityHomeOneDayData *info = [[ComFqHalcyonEntityHomeOneDayData alloc] init];
        [info setAtttributeByjsonWithFQJSONObject:obj];
        [dataInfos addWithId:info];
      }
      @catch (
#line 266
      FQJSONException *e) {
        [((FQJSONException *) nil_chk(e)) printStackTrace];
      }
    }
    
#line 272
    FQJSONArray *numArray = [((FQJSONObject *) nil_chk(((FQJSONObject *) check_class_cast(results, [FQJSONObject class])))) optJSONArrayWithNSString:@"recongnizedNums"];
    
#line 274
    dataInfos = [this$0_ fillListWithJavaUtilArrayList:dataInfos withLong:val$from_ withInt:val$size_ withFQJSONArray:numArray];
    [((id<ComFqHalcyonLogic2DoctorHomeLogic_OnDoctorHomeCallback>) nil_chk(val$callback_)) feedHomeDatasWithJavaUtilArrayList:dataInfos];
  }
}

- (id)initWithComFqHalcyonLogic2DoctorHomeLogic:(ComFqHalcyonLogic2DoctorHomeLogic *)outer$
withComFqHalcyonLogic2DoctorHomeLogic_OnDoctorHomeCallback:(id<ComFqHalcyonLogic2DoctorHomeLogic_OnDoctorHomeCallback>)capture$0
                                       withLong:(long long int)capture$1
                                        withInt:(int)capture$2 {
  this$0_ = outer$;
  val$callback_ = capture$0;
  val$from_ = capture$1;
  val$size_ = capture$2;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "onErrorWithInt:withJavaLangThrowable:", "onError", "V", 0x1, NULL },
    { "handleWithInt:withNSString:withInt:withId:", "handle", "V", 0x1, NULL },
    { "initWithComFqHalcyonLogic2DoctorHomeLogic:withComFqHalcyonLogic2DoctorHomeLogic_OnDoctorHomeCallback:withLong:withInt:", "init", NULL, 0x0, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lcom.fq.halcyon.logic2.DoctorHomeLogic;", NULL,  },
    { "val$callback_", NULL, 0x1012, "Lcom.fq.halcyon.logic2.DoctorHomeLogic$OnDoctorHomeCallback;", NULL,  },
    { "val$from_", NULL, 0x1012, "J", NULL,  },
    { "val$size_", NULL, 0x1012, "I", NULL,  },
  };
  static J2ObjcClassInfo _ComFqHalcyonLogic2DoctorHomeLogic_$4 = { "$4", "com.fq.halcyon.logic2", "DoctorHomeLogic", 0x8000, 3, methods, 4, fields, 0, NULL};
  return &_ComFqHalcyonLogic2DoctorHomeLogic_$4;
}

@end

@implementation ComFqHalcyonLogic2DoctorHomeLogic_$5


#line 383
- (int)compareWithId:(ComFqHalcyonEntityHomeOneDayData *)lhs
              withId:(ComFqHalcyonEntityHomeOneDayData *)rhs {
  
#line 384
  long long int l = [((ComFqHalcyonEntityHomeOneDayData *) nil_chk(lhs)) getTimeMillis];
  long long int r = [((ComFqHalcyonEntityHomeOneDayData *) nil_chk(rhs)) getTimeMillis];
  if (l > r) return 1;
  if (l < r) return -1;
  return 0;
}

- (id)init {
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "compareWithComFqHalcyonEntityHomeOneDayData:withComFqHalcyonEntityHomeOneDayData:", "compare", "I", 0x1, NULL },
    { "init", NULL, NULL, 0x0, NULL },
  };
  static J2ObjcClassInfo _ComFqHalcyonLogic2DoctorHomeLogic_$5 = { "$5", "com.fq.halcyon.logic2", "DoctorHomeLogic", 0x8000, 2, methods, 0, NULL, 0, NULL};
  return &_ComFqHalcyonLogic2DoctorHomeLogic_$5;
}

@end
